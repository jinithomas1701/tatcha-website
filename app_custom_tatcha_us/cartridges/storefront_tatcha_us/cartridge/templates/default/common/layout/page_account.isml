<!--- TEMPLATENAME: page.isml --->
<iscontent type="text/html" charset="UTF-8" compact="true"/>

<isinclude template="/components/modules" sf-toolkit="off" />

<!DOCTYPE html>
<html lang="${require('dw/util/Locale').getLocale(request.getLocale()).getLanguage()}">
<head>
    <isscript>
        var assets = require('*/cartridge/scripts/assets.js');
        assets.addCss('/css/tatcha-reset-password.css');

        var pageContext = {
            title: 'My Account',
            type: 'MyAccount',
            ns: 'account'
        };
        var showBackButton = false;
        if(customer.authenticated && session.clickStream) {
            var accountPages = ['Account-Show'];
            var backURL = URLUtils.url('Account-Show');
            var giftCertURL = 'GiftCert-GiftPurchase';

            var pipelineName = session.clickStream.last.pipelineName;

            if(pipelineName && accountPages.indexOf(pipelineName) < 0 && pipelineName !== giftCertURL) {
                showBackButton = true;
            }

            if(pipelineName == 'Address-Add' || pipelineName == 'Address-Edit') {
                backURL = URLUtils.url('Address-List');
            }
            if(pipelineName == 'PaymentInstruments-Add' || pipelineName == 'PaymentInstruments-Edit') {
                backURL = URLUtils.url('PaymentInstruments-List');
            }
            if(pipelineName == 'Order-Orders') {
                backURL = URLUtils.url('Order-History');
            }
        }

        var requestType = request.getHttpURL()+'';
        try {
            if(requestType.indexOf('AccountSfra-PasswordReset') !== -1){
            requestType = 'passwordReset';
            } else {
                requestType = 'account';
            }
        } catch(err){}

    </isscript>

    <!--[if gt IE 9]>
    <isinclude sf-toolkit="off" template="/common/scripts" />
    <!--<![endif]-->
    <isinclude template="common/htmlHead" />

    <isif condition="${pdict.canonicalUrl}" >
        <link rel="canonical" href="${pdict.canonicalUrl}"/>
    </isif>
    <isactivedatahead/>
    <isinclude template="/components/schema" />
</head>
<body>
${dw.system.HookMgr.callHook('app.template.beforeHeader', 'beforeHeader', pdict) ||''}

<isinclude template="common/UI_Includes"/>
<div class="page" data-action="${pdict.action}" data-querystring="${pdict.queryString}" >
    <isinclude template="/components/header/pageHeader" />
    <iscontentasset aid="mobile-exposed-nav"/>

	<isif condition="${(showBackButton == true)}">
		<div class="container-fluid breadcrumb-container">
			<ol id="myaccount-breadcrumb" class="breadcrumb container">
		  		<li>
		  			<a href="${backURL}">
		  				<i class="fal fa-angle-double-left"></i>
		  				${Resource.msg('global.back','locale',null)}
		  			</a>
		  		</li>
			</ol>
		</div>
	</isif>
    <div role="main" id="maincontent" tabindex="-1">
        <isreplace/>
    </div>
    <isinclude template="/components/footer/pageFooter" />

</div>
<div class="error-messaging"></div>
<div class="modal-background"></div>
<iscontentasset aid="cookie_hint" />

<isinclude sf-toolkit="off" template="/common/scripts" />


<iscomment>
    hook for Marketing Cloud connector & other integration which need to inject
    logic at the page end
    IMPORTANT: Note that this hook will be called to cached as well as uncached pages
    which means you need to put privacy information into another remote include
</iscomment>


${dw.system.HookMgr.callHook('app.template.afterFooter', 'afterFooter', pdict) ||''}
<iscomment><isinclude url="${dw.web.URLUtils.url('ConsentTracking-Check')}"/></iscomment>

</body>
</html>
