/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.net );
importPackage( dw.io );
importPackage( dw.util );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{

      //read all the lines
      try
	   {
    	//create file to import
    	
    	//generating the time stamp to be added to the feed new name	
		var calendar : Calendar = new Calendar();
		calendar.timeZone = "GMT";
		var gmtDateString : String = StringUtils.formatCalendar( calendar, "yyyy-MM-dd_HH-mm-ss" );
		
			
		var importFile : File = new File(File.IMPEX + "/src/catalog/TATCHA_MASTER_CATALOG_OFFLINE"+gmtDateString+".xml");
    	
    	// Create an output stream
        var xsw : XMLStreamWriter = beginFeed(importFile);
        
        //write products to xml file
          try{

		      var products : Iterator = ProductMgr.queryAllSiteProducts();
		      while (products.hasNext()) {

	          var product : Product = products.next();	
	        		
	        		
	        		//End Skin Concerns Icons
				    startProductXML(xsw,product);  
				    closeProductXML(xsw); 
		      }
      
      }catch(e){
      	
      	 Logger.error(" Tatcha Catalog Conversion "+e);
      	 return PIPELET_ERROR;
      }
    
         
        // Flush & close the stream
        closeFeed(xsw);
	}
	catch(ex)
	{
		Logger.error("ConvertFile ERROR: " + ex);
		return PIPELET_ERROR;
	}
       
    
      return PIPELET_NEXT;
   
}

function beginFeed(file : File) : XMLStreamWriter {
    var fw : FileWriter = new FileWriter(file, "UTF-8", false);
    var xsw : XMLStreamWriter = new XMLIndentingStreamWriter(fw);
    
   	xsw.writeStartDocument("UTF-8", "1.0");
	
	xsw.writeStartElement( "catalog" );
	xsw.writeDefaultNamespace("http://www.demandware.com/xml/impex/catalog/2006-10-31");
	xsw.writeAttribute( "catalog-id", "master_catalog_tatcha");
	
    return xsw;
}
function closeFeed(xsw : XMLStreamWriter) {
	// close root element and document
    xsw.writeEndElement();			//</catalog>
    xsw.writeEndDocument();
   
    xsw.flush();
    xsw.close();
}




function startProductXML(xsw : XMLStreamWriter, product : Product) {
	xsw.writeStartElement( "product" );
	xsw.writeAttribute( "product-id" ,product.ID);
	
			
	xsw.writeStartElement("online-flag");
	xsw.writeCharacters("false");
	xsw.writeEndElement();
	
	xsw.writeStartElement("available-flag");
	xsw.writeCharacters("false");
	xsw.writeEndElement();
	
	xsw.writeStartElement("searchable-flag");
	xsw.writeCharacters("false");
	xsw.writeEndElement();
	
}

function closeProductXML(xsw : XMLStreamWriter) {	
	xsw.writeEndElement();		//</product>
}



