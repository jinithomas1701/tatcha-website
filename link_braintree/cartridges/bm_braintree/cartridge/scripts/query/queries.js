module.exports = {
    addVariables: function (name, variables) {
        if (!this[name]) throw new Error('empty query');
        if (!variables) return this[name];
        return this[name].replace('"valiables":{}', '"variables":' + JSON.stringify(variables));
    },
    authorization: '{"query":"mutation AuthorizePaymentMethod($input: AuthorizePaymentMethodInput!) {    authorizePaymentMethod(input: $input) {      clientMutationId      transaction {          ...transactionFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethod {          id,          legacyId      }      amount {          value          currencyCode      }      orderId      status      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      source  }  ","valiables":{}}',
    capture: '{"query":"mutation CaptureTransaction($input: CaptureTransactionInput!) {    captureTransaction(input: $input) {      clientMutationId      transaction {          ...transactionFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethod {          id,          legacyId      }      amount {          value          currencyCode      }      orderId      status      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      source  }  ","valiables":{}}',
    clientId: '{"query":"mutation ($input: CreateClientTokenInput) {      createClientToken(input: $input) {          clientToken      }  }","valiables":{}}',
    legacyIdConverter: '{"query":"query ($legacyId: ID!, $type: LegacyIdType!) {    idFromLegacyId(legacyId: $legacyId, type: $type)  }","valiables":{}}',
    partialCapture: '{"query":"mutation PartialCaptureTransaction($input: PartialCaptureTransactionInput!) {    partialCaptureTransaction(input: $input) {      clientMutationId      capture {          ...transactionFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethod {          id,          legacyId      }      amount {          value          currencyCode      }      orderId      status      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      source  }  ","valiables":{}}',
    ping: '{"query":"query Ping {     ping  }  ","valiables":{}}',
    refund: '{"query":"mutation refundTransaction($input: RefundTransactionInput!) {    refundTransaction(input: $input) {      clientMutationId      refund {          ...refundFields      }    }  }   fragment refundFields on Refund {      id      legacyId      amount {          value          currencyCode      }      status  }  ","valiables":{}}',
    reverse: '{"query":"mutation ReverseTransaction($input: ReverseTransactionInput!) {    reverseTransaction(input: $input) {      clientMutationId      reversal {          __typename          ... on Refund {              ...refundFields          }          ... on Transaction {              ...transactionFields          }      }    }  }   fragment refundFields on Refund {      id      legacyId      amount {          value          currencyCode      }      status  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethod {          id,          legacyId      }      amount {          value          currencyCode      }      orderId      status      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      source  }  ","valiables":{}}',
    sale: '{"query":"mutation ChargePaymentMethod($input: ChargePaymentMethodInput!) {    chargePaymentMethod(input: $input) {      clientMutationId      transaction {        ...transactionFields      }    }  } fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethod {          id,          legacyId      }      amount {          value          currencyCode      }      orderId      status      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      source  }  ","valiables":{}}',
    search: '{"query":"query Search($input: TransactionSearchInput!) {    search {      transactions(input: $input) {        edges {          node {            id            legacyId            orderId            paymentMethod {              id              legacyId            }            amount {              value              currencyCode            }            createdAt            customer {              firstName              lastName              id              email              legacyId            }            shipping {              shippingAddress {                fullName                addressLine1                addressLine2                adminArea1                adminArea2                postalCode                countryCode              }            }            refunds {              ...refundFields            }            status            statusHistory {              status              timestamp              amount {                  value                  currencyCode              }            }          }        }      }    }  }   fragment refundFields on Refund {      id      legacyId      amount {          value          currencyCode      }      status  }  ","valiables":{}}',
    searchRefund: '{"query":"query Search($input: RefundSearchInput!) {    search {      refunds(input: $input) {        edges {          node {            id            legacyId            orderId            paymentMethod {              id              legacyId            }            amount {              value              currencyCode            }            createdAt            customer {              firstName              lastName              id              email              legacyId            }            status            statusHistory {              status              timestamp              amount {                  value                  currencyCode              }            }          }        }      }    }  }  ","valiables":{}}'
};
