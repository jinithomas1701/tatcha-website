module.exports = {
    addVariables: function (name, variables) {
        if (!this[name]) throw new Error('empty query');
        if (!variables) return this[name];
        return this[name].replace('"valiables":{}', '"variables":' + JSON.stringify(variables));
    },
    authorization: '{"query":"mutation AuthorizePaymentMethod($input: AuthorizePaymentMethodInput!) {    authorizePaymentMethod(input: $input) {      clientMutationId      transaction {          ...transactionFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethodSnapshot {           __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              cardholderName              threeDSecure {                  authentication {                      authenticationStatus                  }              }          }          ... on PayPalTransactionDetails {              payer {                  email              }          }          ... on VenmoAccountDetails {                  venmoUserId              }          }      paymentMethod {          id          legacyId          customer {              legacyId              firstName              lastName          }      }      amount {          value          currencyCode      }      customFields {          name          value      }      merchantAccountId      orderId      purchaseOrderNumber      status      descriptor {          name          phone          url      }      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      channel      customer {          id          legacyId          company          createdAt          defaultPaymentMethod {              id              legacyId          }          email          firstName          lastName          phoneNumber          paymentMethods {              edges {                  node {                      id                      legacyId                  }              }          }      }      shipping {          shippingAddress {                fullName                addressLine1                addressLine2                adminArea1                adminArea2                postalCode                countryCode                phoneNumber          }         }      tax {          taxAmount           taxExempt      }      discountAmount      billingAddress {          fullName          addressLine1          addressLine2          adminArea1          adminArea2          postalCode          countryCode          phoneNumber      }      source  }  ","valiables":{}}',
    authorizePaypal: '{"query":"mutation AuthorizePayPalAccount($input: AuthorizePayPalAccountInput!) {    authorizePayPalAccount(input: $input) {      clientMutationId      transaction {        ...transactionFields      }      billingAgreementWithPurchasePaymentMethod {          ...paymentMethodFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethodSnapshot {           __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              cardholderName              threeDSecure {                  authentication {                      authenticationStatus                  }              }          }          ... on PayPalTransactionDetails {              payer {                  email              }          }          ... on VenmoAccountDetails {                  venmoUserId              }          }      paymentMethod {          id          legacyId          customer {              legacyId              firstName              lastName          }      }      amount {          value          currencyCode      }      customFields {          name          value      }      merchantAccountId      orderId      purchaseOrderNumber      status      descriptor {          name          phone          url      }      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      channel      customer {          id          legacyId          company          createdAt          defaultPaymentMethod {              id              legacyId          }          email          firstName          lastName          phoneNumber          paymentMethods {              edges {                  node {                      id                      legacyId                  }              }          }      }      shipping {          shippingAddress {                fullName                addressLine1                addressLine2                adminArea1                adminArea2                postalCode                countryCode                phoneNumber          }         }      tax {          taxAmount           taxExempt      }      discountAmount      billingAddress {          fullName          addressLine1          addressLine2          adminArea1          adminArea2          postalCode          countryCode          phoneNumber      }      source  }   fragment paymentMethodFields on PaymentMethod {      id      legacyId      usage      customer {          legacyId          firstName          lastName          phoneNumber      }      createdAt          details {          __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              bin              uniqueNumberIdentifier              cardholderName          }          ... on PayPalAccountDetails {              email              payerId          }          ... on VenmoAccountDetails {              username              venmoUserId          }      }  }","valiables":{}}',
    chargePaypal: '{"query":"mutation ChargePayPalAccount($input: ChargePayPalAccountInput!) {    chargePayPalAccount(input: $input) {      clientMutationId      transaction {        ...transactionFields      }      billingAgreementWithPurchasePaymentMethod {          ...paymentMethodFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethodSnapshot {           __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              cardholderName              threeDSecure {                  authentication {                      authenticationStatus                  }              }          }          ... on PayPalTransactionDetails {              payer {                  email              }          }          ... on VenmoAccountDetails {                  venmoUserId              }          }      paymentMethod {          id          legacyId          customer {              legacyId              firstName              lastName          }      }      amount {          value          currencyCode      }      customFields {          name          value      }      merchantAccountId      orderId      purchaseOrderNumber      status      descriptor {          name          phone          url      }      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      channel      customer {          id          legacyId          company          createdAt          defaultPaymentMethod {              id              legacyId          }          email          firstName          lastName          phoneNumber          paymentMethods {              edges {                  node {                      id                      legacyId                  }              }          }      }      shipping {          shippingAddress {                fullName                addressLine1                addressLine2                adminArea1                adminArea2                postalCode                countryCode                phoneNumber          }         }      tax {          taxAmount           taxExempt      }      discountAmount      billingAddress {          fullName          addressLine1          addressLine2          adminArea1          adminArea2          postalCode          countryCode          phoneNumber      }      source  }   fragment paymentMethodFields on PaymentMethod {      id      legacyId      usage      customer {          legacyId          firstName          lastName          phoneNumber      }      createdAt          details {          __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              bin              uniqueNumberIdentifier              cardholderName          }          ... on PayPalAccountDetails {              email              payerId          }          ... on VenmoAccountDetails {              username              venmoUserId          }      }  }","valiables":{}}',
    clientId: '{"query":"mutation ($input: CreateClientTokenInput) {      createClientToken(input: $input) {          clientToken      }  }","valiables":{}}',
    createCustomer: '{"query":"mutation CreateCustomer($input: CreateCustomerInput!) {      createCustomer(input: $input) {          customer {              ...customerFields          }      }  }   fragment customerFields on Customer {      id      legacyId      firstName      lastName      company      createdAt      phoneNumber      email  }  ","valiables":{}}',
    deletePaymentMethodFromVault: '{"query":"mutation DeletePaymentMethodFromVault ($input: DeletePaymentMethodFromVaultInput!) {      deletePaymentMethodFromVault(input: $input) {          clientMutationId      }  }","valiables":{}}',
    legacyIdConverter: '{"query":"query ($legacyId: ID!, $type: LegacyIdType!) {    idFromLegacyId(legacyId: $legacyId, type: $type)  }","valiables":{}}',
    ping: '{"query":"query Ping {     ping  }  ","valiables":{}}',
    sale: '{"query":"mutation ChargePaymentMethod($input: ChargePaymentMethodInput!) {    chargePaymentMethod(input: $input) {      clientMutationId      transaction {        ...transactionFields      }    }  }   fragment transactionFields on Transaction {      id      legacyId      createdAt      paymentMethodSnapshot {           __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              cardholderName              threeDSecure {                  authentication {                      authenticationStatus                  }              }          }          ... on PayPalTransactionDetails {              payer {                  email              }          }          ... on VenmoAccountDetails {                  venmoUserId              }          }      paymentMethod {          id          legacyId          customer {              legacyId              firstName              lastName          }      }      amount {          value          currencyCode      }      customFields {          name          value      }      merchantAccountId      orderId      purchaseOrderNumber      status      descriptor {          name          phone          url      }      statusHistory {          status          timestamp          amount {              value              currencyCode          }      }      channel      customer {          id          legacyId          company          createdAt          defaultPaymentMethod {              id              legacyId          }          email          firstName          lastName          phoneNumber          paymentMethods {              edges {                  node {                      id                      legacyId                  }              }          }      }      shipping {          shippingAddress {                fullName                addressLine1                addressLine2                adminArea1                adminArea2                postalCode                countryCode                phoneNumber          }         }      tax {          taxAmount           taxExempt      }      discountAmount      billingAddress {          fullName          addressLine1          addressLine2          adminArea1          adminArea2          postalCode          countryCode          phoneNumber      }      source  }  ","valiables":{}}',
    searchCustomer: '{"query":"query SearchCustomer($input: CustomerSearchInput!) {    search {      customers(input: $input) {        edges {          node {            legacyId          }        }      }    }  }","valiables":{}}',
    searchTransaction: '{"query":"query Search($input: TransactionSearchInput!) {    search {      transactions(input: $input) {        edges {          node {              legacyId              status          }        }      }    }  }","valiables":{}}',
    vaultPaymentMethod: '{"query":"mutation VaultPaymentMethod($input: VaultPaymentMethodInput!) {    vaultPaymentMethod(input: $input) {      paymentMethod {          ...paymentMethodFields      }    }  } fragment paymentMethodFields on PaymentMethod {      id      legacyId      usage      customer {          legacyId          firstName          lastName          phoneNumber      }      createdAt          details {          __typename          ... on CreditCardDetails {              brandCode              expirationMonth              expirationYear              last4              bin              uniqueNumberIdentifier              cardholderName          }          ... on PayPalAccountDetails {              email              payerId          }          ... on VenmoAccountDetails {              username              venmoUserId          }      }  }","valiables":{}}'
};
