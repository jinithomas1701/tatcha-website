!function(g){var I={};function C(A){if(I[A])return I[A].exports;var n=I[A]={i:A,l:!1,exports:{}};return g[A].call(n.exports,n,n.exports,C),n.l=!0,n.exports}C.m=g,C.c=I,C.d=function(g,I,A){C.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:A})},C.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},C.t=function(g,I){if(1&I&&(g=C(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var n in g)C.d(A,n,function(I){return g[I]}.bind(null,n));return A},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,"a",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p="",C(C.s=10)}([function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nmodule.exports = function (element) {\r\n    var position = element && element.length ? element.offset().top : 0;\r\n    $('html, body').animate({\r\n        scrollTop: position\r\n    }, 500);\r\n    if (!element) {\r\n        $('.logo-home').focus();\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3RvcmVmcm9udC1yZWZlcmVuY2UtYXJjaGl0ZWN0dXJlL2NhcnRyaWRnZXMvYXBwX3N0b3JlZnJvbnRfYmFzZS9jYXJ0cmlkZ2UvY2xpZW50L2RlZmF1bHQvanMvY29tcG9uZW50cy9zY3JvbGxBbmltYXRlLmpzPzViODMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgIHZhciBwb3NpdGlvbiA9IGVsZW1lbnQgJiYgZWxlbWVudC5sZW5ndGggPyBlbGVtZW50Lm9mZnNldCgpLnRvcCA6IDA7XHJcbiAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XHJcbiAgICAgICAgc2Nyb2xsVG9wOiBwb3NpdGlvblxyXG4gICAgfSwgNTAwKTtcclxuICAgIGlmICghZWxlbWVudCkge1xyXG4gICAgICAgICQoJy5sb2dvLWhvbWUnKS5mb2N1cygpO1xyXG4gICAgfVxyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nmodule.exports = function (include) {\r\n    if (typeof include === 'function') {\r\n        include();\r\n    } else if (typeof include === 'object') {\r\n        Object.keys(include).forEach(function (key) {\r\n            if (typeof include[key] === 'function') {\r\n                include[key]();\r\n            }\r\n        });\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3RvcmVmcm9udC1yZWZlcmVuY2UtYXJjaGl0ZWN0dXJlL2NhcnRyaWRnZXMvYXBwX3N0b3JlZnJvbnRfYmFzZS9jYXJ0cmlkZ2UvY2xpZW50L2RlZmF1bHQvanMvdXRpbC5qcz83NWY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmNsdWRlKSB7XHJcbiAgICBpZiAodHlwZW9mIGluY2x1ZGUgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICBpbmNsdWRlKCk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBpbmNsdWRlID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIE9iamVjdC5rZXlzKGluY2x1ZGUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGluY2x1ZGVba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgaW5jbHVkZVtrZXldKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar scrollAnimate = __webpack_require__(0);\r\n\r\n/**\r\n * Display error messages and highlight form fields with errors.\r\n * @param {string} parentSelector - the form which contains the fields\r\n * @param {Object} fieldErrors - the fields with errors\r\n */\r\nfunction loadFormErrors(parentSelector, fieldErrors) { // eslint-disable-line\r\n    // Display error messages and highlight form fields with errors.\r\n    $.each(fieldErrors, function (attr) {\r\n        $('*[name=' + attr + ']', parentSelector)\r\n            .addClass('is-invalid')\r\n            .siblings('.invalid-feedback')\r\n            .html(fieldErrors[attr]);\r\n    });\r\n    // Animate to top of form that has errors\r\n    scrollAnimate($(parentSelector));\r\n}\r\n\r\n/**\r\n * Clear the form errors.\r\n * @param {string} parentSelector - the parent form selector.\r\n */\r\nfunction clearPreviousErrors(parentSelector) {\r\n    $(parentSelector).find('.form-control.is-invalid').removeClass('is-invalid');\r\n    $('.error-message').hide();\r\n}\r\n\r\nmodule.exports = {\r\n    loadFormErrors: loadFormErrors,\r\n    clearPreviousErrors: clearPreviousErrors\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3RvcmVmcm9udC1yZWZlcmVuY2UtYXJjaGl0ZWN0dXJlL2NhcnRyaWRnZXMvYXBwX3N0b3JlZnJvbnRfYmFzZS9jYXJ0cmlkZ2UvY2xpZW50L2RlZmF1bHQvanMvY2hlY2tvdXQvZm9ybUVycm9ycy5qcz9kMjg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLENBQTZCOztBQUV6RDtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQjtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIHNjcm9sbEFuaW1hdGUgPSByZXF1aXJlKCcuLi9jb21wb25lbnRzL3Njcm9sbEFuaW1hdGUnKTtcclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5IGVycm9yIG1lc3NhZ2VzIGFuZCBoaWdobGlnaHQgZm9ybSBmaWVsZHMgd2l0aCBlcnJvcnMuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJlbnRTZWxlY3RvciAtIHRoZSBmb3JtIHdoaWNoIGNvbnRhaW5zIHRoZSBmaWVsZHNcclxuICogQHBhcmFtIHtPYmplY3R9IGZpZWxkRXJyb3JzIC0gdGhlIGZpZWxkcyB3aXRoIGVycm9yc1xyXG4gKi9cclxuZnVuY3Rpb24gbG9hZEZvcm1FcnJvcnMocGFyZW50U2VsZWN0b3IsIGZpZWxkRXJyb3JzKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcclxuICAgIC8vIERpc3BsYXkgZXJyb3IgbWVzc2FnZXMgYW5kIGhpZ2hsaWdodCBmb3JtIGZpZWxkcyB3aXRoIGVycm9ycy5cclxuICAgICQuZWFjaChmaWVsZEVycm9ycywgZnVuY3Rpb24gKGF0dHIpIHtcclxuICAgICAgICAkKCcqW25hbWU9JyArIGF0dHIgKyAnXScsIHBhcmVudFNlbGVjdG9yKVxyXG4gICAgICAgICAgICAuYWRkQ2xhc3MoJ2lzLWludmFsaWQnKVxyXG4gICAgICAgICAgICAuc2libGluZ3MoJy5pbnZhbGlkLWZlZWRiYWNrJylcclxuICAgICAgICAgICAgLmh0bWwoZmllbGRFcnJvcnNbYXR0cl0pO1xyXG4gICAgfSk7XHJcbiAgICAvLyBBbmltYXRlIHRvIHRvcCBvZiBmb3JtIHRoYXQgaGFzIGVycm9yc1xyXG4gICAgc2Nyb2xsQW5pbWF0ZSgkKHBhcmVudFNlbGVjdG9yKSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDbGVhciB0aGUgZm9ybSBlcnJvcnMuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJlbnRTZWxlY3RvciAtIHRoZSBwYXJlbnQgZm9ybSBzZWxlY3Rvci5cclxuICovXHJcbmZ1bmN0aW9uIGNsZWFyUHJldmlvdXNFcnJvcnMocGFyZW50U2VsZWN0b3IpIHtcclxuICAgICQocGFyZW50U2VsZWN0b3IpLmZpbmQoJy5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZCcpLnJlbW92ZUNsYXNzKCdpcy1pbnZhbGlkJyk7XHJcbiAgICAkKCcuZXJyb3ItbWVzc2FnZScpLmhpZGUoKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBsb2FkRm9ybUVycm9yczogbG9hZEZvcm1FcnJvcnMsXHJcbiAgICBjbGVhclByZXZpb3VzRXJyb3JzOiBjbGVhclByZXZpb3VzRXJyb3JzXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},,function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/**\r\n * Populate the Billing Address Summary View\r\n * @param {string} parentSelector - the top level DOM selector for a unique address summary\r\n * @param {Object} address - the address data\r\n */\r\nfunction populateAddressSummary(parentSelector, address) {\r\n    $.each(address, function (attr) {\r\n        var val = address[attr];\r\n        $('.' + attr, parentSelector).text(val || '');\r\n    });\r\n}\r\n\r\n/**\r\n * returns a formed <option /> element\r\n * @param {Object} shipping - the shipping object (shipment model)\r\n * @param {boolean} selected - current shipping is selected (for PLI)\r\n * @param {order} order - the Order model\r\n * @param {Object} [options] - options\r\n * @returns {Object} - the jQuery / DOMElement\r\n */\r\nfunction optionValueForAddress(shipping, selected, order, options) {\r\n    var safeOptions = options || {};\r\n    var isBilling = safeOptions.type && safeOptions.type === 'billing';\r\n    var className = safeOptions.className || '';\r\n    var isSelected = selected;\r\n    var isNew = !shipping;\r\n    if (typeof shipping === 'string') {\r\n        return $('<option class=\"' + className + '\" disabled>' + shipping + '</option>');\r\n    }\r\n    var safeShipping = shipping || {};\r\n    var shippingAddress = safeShipping.shippingAddress || {};\r\n\r\n    if (isBilling && isNew && !order.billing.matchingAddressId) {\r\n        shippingAddress = order.billing.billingAddress.address || {};\r\n        isNew = false;\r\n        isSelected = true;\r\n        safeShipping.UUID = 'manual-entry';\r\n    }\r\n\r\n    var uuid = safeShipping.UUID ? safeShipping.UUID : 'new';\r\n    var optionEl = $('<option class=\"' + className + '\" />');\r\n    optionEl.val(uuid);\r\n\r\n    var title;\r\n\r\n    if (isNew) {\r\n        title = order.resources.addNewAddress;\r\n    } else {\r\n        title = [];\r\n        if (shippingAddress.firstName) {\r\n            title.push(shippingAddress.firstName);\r\n        }\r\n        if (shippingAddress.lastName) {\r\n            title.push(shippingAddress.lastName);\r\n        }\r\n        if (shippingAddress.address1) {\r\n            title.push(shippingAddress.address1);\r\n        }\r\n        if (shippingAddress.address2) {\r\n            title.push(shippingAddress.address2);\r\n        }\r\n        if (shippingAddress.city) {\r\n            if (shippingAddress.state) {\r\n                title.push(shippingAddress.city + ',');\r\n            } else {\r\n                title.push(shippingAddress.city);\r\n            }\r\n        }\r\n        if (shippingAddress.stateCode) {\r\n            title.push(shippingAddress.stateCode);\r\n        }\r\n        if (shippingAddress.postalCode) {\r\n            title.push(shippingAddress.postalCode);\r\n        }\r\n        if (!isBilling && safeShipping.selectedShippingMethod) {\r\n            title.push('-');\r\n            title.push(safeShipping.selectedShippingMethod.displayName);\r\n        }\r\n\r\n        if (title.length > 2) {\r\n            title = title.join(' ');\r\n        } else {\r\n            title = order.resources.newAddress;\r\n        }\r\n    }\r\n    optionEl.text(title);\r\n\r\n    var keyMap = {\r\n        'data-first-name': 'firstName',\r\n        'data-last-name': 'lastName',\r\n        'data-address1': 'address1',\r\n        'data-address2': 'address2',\r\n        'data-city': 'city',\r\n        'data-state-code': 'stateCode',\r\n        'data-postal-code': 'postalCode',\r\n        'data-country-code': 'countryCode',\r\n        'data-phone': 'phone'\r\n    };\r\n    $.each(keyMap, function (key) {\r\n        var mappedKey = keyMap[key];\r\n        var mappedValue = shippingAddress[mappedKey];\r\n        // In case of country code\r\n        if (mappedValue && typeof mappedValue === 'object') {\r\n            mappedValue = mappedValue.value;\r\n        }\r\n\r\n        optionEl.attr(key, mappedValue || '');\r\n    });\r\n\r\n    var giftObj = {\r\n        'data-is-gift': 'isGift',\r\n        'data-gift-message': 'giftMessage'\r\n    };\r\n\r\n    $.each(giftObj, function (key) {\r\n        var mappedKey = giftObj[key];\r\n        var mappedValue = safeShipping[mappedKey];\r\n        optionEl.attr(key, mappedValue || '');\r\n    });\r\n\r\n    if (isSelected) {\r\n        optionEl.attr('selected', true);\r\n    }\r\n\r\n    return optionEl;\r\n}\r\n\r\n/**\r\n * returns address properties from a UI form\r\n * @param {Form} form - the Form element\r\n * @returns {Object} - a JSON object with all values\r\n */\r\nfunction getAddressFieldsFromUI(form) {\r\n    var address = {\r\n        firstName: $('input[name$=_firstName]', form).val(),\r\n        lastName: $('input[name$=_lastName]', form).val(),\r\n        address1: $('input[name$=_address1]', form).val(),\r\n        address2: $('input[name$=_address2]', form).val(),\r\n        city: $('input[name$=_city]', form).val(),\r\n        postalCode: $('input[name$=_postalCode]', form).val(),\r\n        stateCode: $('select[name$=_stateCode],input[name$=_stateCode]', form).val(),\r\n        countryCode: $('select[name$=_country]', form).val(),\r\n        phone: $('input[name$=_phone]', form).val()\r\n    };\r\n    return address;\r\n}\r\n\r\nmodule.exports = {\r\n    methods: {\r\n        populateAddressSummary: populateAddressSummary,\r\n        optionValueForAddress: optionValueForAddress,\r\n        getAddressFieldsFromUI: getAddressFieldsFromUI\r\n    },\r\n\r\n    showDetails: function () {\r\n        $('.btn-show-details').on('click', function () {\r\n            var form = $(this).closest('form');\r\n\r\n            form.attr('data-address-mode', 'details');\r\n            form.find('.multi-ship-address-actions').removeClass('d-none');\r\n            form.find('.multi-ship-action-buttons .col-12.btn-save-multi-ship').addClass('d-none');\r\n        });\r\n    },\r\n\r\n    addNewAddress: function () {\r\n        $('.btn-add-new').on('click', function () {\r\n            var $el = $(this);\r\n            if ($el.parents('#dwfrm_billing').length > 0) {\r\n                // Handle billing address case\r\n                $('body').trigger('checkout:clearBillingForm');\r\n                var $option = $($el.parents('form').find('.addressSelector option')[0]);\r\n                $option.attr('value', 'new');\r\n                var $newTitle = $('#dwfrm_billing input[name=localizedNewAddressTitle]').val();\r\n                $option.text($newTitle);\r\n                $option.prop('selected', 'selected');\r\n                $el.parents('[data-address-mode]').attr('data-address-mode', 'new');\r\n            } else {\r\n                // Handle shipping address case\r\n                var $newEl = $el.parents('form').find('.addressSelector option[value=new]');\r\n                $newEl.prop('selected', 'selected');\r\n                $newEl.parent().trigger('change');\r\n            }\r\n        });\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},,,,,,function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar processInclude = __webpack_require__(1);\r\n\r\n$(document).ready(function () {\r\n    processInclude(__webpack_require__(11));\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jYXJ0cmlkZ2VzL2ludF9hZnRlcnBheV9zZnJhL2NhcnRyaWRnZS9jbGllbnQvZGVmYXVsdC9qcy9jaGVja291dC5qcz9mZjFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQixtQkFBTyxDQUFDLENBQVc7O0FBRXhDO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsRUFBcUI7QUFDaEQsQ0FBQyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBwcm9jZXNzSW5jbHVkZSA9IHJlcXVpcmUoJ2Jhc2UvdXRpbCcpO1xyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzc0luY2x1ZGUocmVxdWlyZSgnLi9jaGVja291dC9jaGVja291dCcpKTtcclxufSk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar addressHelpers = __webpack_require__(4);\r\nvar shippingHelpers = __webpack_require__(12);\r\nvar billingHelpers = __webpack_require__(13);\r\nvar summaryHelpers = __webpack_require__(17);\r\nvar formHelpers = __webpack_require__(2);\r\nvar scrollAnimate = __webpack_require__(0);\r\n\r\n\r\n/**\r\n * Create the jQuery Checkout Plugin.\r\n *\r\n * This jQuery plugin will be registered on the dom element in checkout.isml with the\r\n * id of \"checkout-main\".\r\n *\r\n * The checkout plugin will handle the different state the user interface is in as the user\r\n * progresses through the varying forms such as shipping and payment.\r\n *\r\n * Billing info and payment info are used a bit synonymously in this code.\r\n *\r\n */\r\n(function ($) {\r\n    $.fn.checkout = function () { // eslint-disable-line\r\n        var plugin = this;\r\n\r\n        //\r\n        // Collect form data from user input\r\n        //\r\n        var formData = {\r\n            // Shipping Address\r\n            shipping: {},\r\n\r\n            // Billing Address\r\n            billing: {},\r\n\r\n            // Payment\r\n            payment: {},\r\n\r\n            // Gift Codes\r\n            giftCode: {}\r\n        };\r\n\r\n        //\r\n        // The different states/stages of checkout\r\n        //\r\n        var checkoutStages = [\r\n            'shipping',\r\n            'payment',\r\n            'placeOrder',\r\n            'submitted'\r\n        ];\r\n\r\n        /**\r\n         * Updates the URL to determine stage\r\n         * @param {number} currentStage - The current stage the user is currently on in the checkout\r\n         */\r\n        function updateUrl(currentStage) {\r\n            history.pushState(\r\n                checkoutStages[currentStage],\r\n                document.title,\r\n                location.pathname\r\n                + '?stage='\r\n                + checkoutStages[currentStage]\r\n                + '#'\r\n                + checkoutStages[currentStage]\r\n            );\r\n        }\r\n\r\n        //\r\n        // Local member methods of the Checkout plugin\r\n        //\r\n        var members = {\r\n\r\n            // initialize the currentStage variable for the first time\r\n            currentStage: 0,\r\n\r\n            /**\r\n             * Set or update the checkout stage (AKA the shipping, billing, payment, etc... steps)\r\n             * @returns {Object} a promise\r\n             */\r\n            updateStage: function () {\r\n                var stage = checkoutStages[members.currentStage];\r\n                var defer = $.Deferred(); // eslint-disable-line\r\n\r\n                if (stage === 'shipping') {\r\n                    //\r\n                    // Clear Previous Errors\r\n                    //\r\n                    formHelpers.clearPreviousErrors('.shipping-form');\r\n\r\n                    //\r\n                    // Submit the Shipping Address Form\r\n                    //\r\n                    var isMultiShip = $('#checkout-main').hasClass('multi-ship');\r\n                    var formSelector = isMultiShip ?\r\n                        '.multi-shipping .active form' : '.single-shipping .shipping-form';\r\n                    var form = $(formSelector);\r\n\r\n                    if (isMultiShip && form.length === 0) {\r\n                        // disable the next:Payment button here\r\n                        $('body').trigger('checkout:disableButton', '.next-step-button button');\r\n                        // in case the multi ship form is already submitted\r\n                        var url = $('#checkout-main').attr('data-checkout-get-url');\r\n                        $.ajax({\r\n                            url: url,\r\n                            method: 'GET',\r\n                            success: function (data) {\r\n                                // enable the next:Payment button here\r\n                                $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                                if (!data.error) {\r\n                                    $('body').trigger('checkout:updateCheckoutView',\r\n                                        { order: data.order, customer: data.customer });\r\n                                    defer.resolve();\r\n                                } else if (data.message && $('.shipping-error .alert-danger').length < 1) {\r\n                                    var errorMsg = data.message;\r\n                                    var errorHtml = '<div class=\"alert alert-danger alert-dismissible valid-cart-error ' +\r\n                                        'fade show\" role=\"alert\">' +\r\n                                        '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\r\n                                        '<span aria-hidden=\"true\">&times;</span>' +\r\n                                        '</button>' + errorMsg + '</div>';\r\n                                    $('.shipping-error').append(errorHtml);\r\n                                    scrollAnimate($('.shipping-error'));\r\n                                    defer.reject();\r\n                                } else if (data.redirectUrl) {\r\n                                    window.location.href = data.redirectUrl;\r\n                                }\r\n                            },\r\n                            error: function () {\r\n                                // enable the next:Payment button here\r\n                                $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                                // Server error submitting form\r\n                                defer.reject();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var shippingFormData = form.serialize();\r\n\r\n                        $('body').trigger('checkout:serializeShipping', {\r\n                            form: form,\r\n                            data: shippingFormData,\r\n                            callback: function (data) {\r\n                                shippingFormData = data;\r\n                            }\r\n                        });\r\n                        // disable the next:Payment button here\r\n                        $('body').trigger('checkout:disableButton', '.next-step-button button');\r\n                        $.ajax({\r\n                            url: form.attr('action'),\r\n                            type: 'post',\r\n                            data: shippingFormData,\r\n                            success: function (data) {\r\n                                 // enable the next:Payment button here\r\n                                $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                                shippingHelpers.methods.shippingFormResponse(defer, data);\r\n                            },\r\n                            error: function (err) {\r\n                                // enable the next:Payment button here\r\n                                $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                                if (err.responseJSON && err.responseJSON.redirectUrl) {\r\n                                    window.location.href = err.responseJSON.redirectUrl;\r\n                                }\r\n                                // Server error submitting form\r\n                                defer.reject(err.responseJSON);\r\n                            }\r\n                        });\r\n                    }\r\n                    return defer;\r\n                } else if (stage === 'payment') {\r\n                    //\r\n                    // Submit the Billing Address Form\r\n                    //\r\n\r\n                    formHelpers.clearPreviousErrors('.payment-form');\r\n\r\n                    var billingAddressForm = $('#dwfrm_billing .billing-address-block :input').serialize();\r\n\r\n                    $('body').trigger('checkout:serializeBilling', {\r\n                        form: $('#dwfrm_billing .billing-address-block'),\r\n                        data: billingAddressForm,\r\n                        callback: function (data) {\r\n                            if (data) {\r\n                                billingAddressForm = data;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var contactInfoForm = $('#dwfrm_billing .contact-info-block :input').serialize();\r\n\r\n                    $('body').trigger('checkout:serializeBilling', {\r\n                        form: $('#dwfrm_billing .contact-info-block'),\r\n                        data: contactInfoForm,\r\n                        callback: function (data) {\r\n                            if (data) {\r\n                                contactInfoForm = data;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var activeTabId = $('.tab-pane.active').attr('id');\r\n                    var paymentInfoSelector = '#dwfrm_billing .' + activeTabId + ' .payment-form-fields :input';\r\n                    var paymentInfoForm = $(paymentInfoSelector).serialize();\r\n\r\n                    $('body').trigger('checkout:serializeBilling', {\r\n                        form: $(paymentInfoSelector),\r\n                        data: paymentInfoForm,\r\n                        callback: function (data) {\r\n                            if (data) {\r\n                                paymentInfoForm = data;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var paymentForm = billingAddressForm + '&' + contactInfoForm + '&' + paymentInfoForm;\r\n\r\n                    if ($('.data-checkout-stage').data('customer-type') === 'registered') {\r\n                        // if payment method is credit card\r\n                        if ($('.payment-information').data('payment-method-id') === 'CREDIT_CARD') {\r\n                            if (!($('.payment-information').data('is-new-payment'))) {\r\n                                var cvvCode = $('.saved-payment-instrument.' +\r\n                                    'selected-payment .saved-payment-security-code').val();\r\n\r\n                                if (cvvCode === '') {\r\n                                    var cvvElement = $('.saved-payment-instrument.' +\r\n                                        'selected-payment ' +\r\n                                        '.form-control');\r\n                                    cvvElement.addClass('is-invalid');\r\n                                    scrollAnimate(cvvElement);\r\n                                    defer.reject();\r\n                                    return defer;\r\n                                }\r\n\r\n                                var $savedPaymentInstrument = $('.saved-payment-instrument' +\r\n                                    '.selected-payment'\r\n                                );\r\n\r\n                                paymentForm += '&storedPaymentUUID=' +\r\n                                    $savedPaymentInstrument.data('uuid');\r\n\r\n                                paymentForm += '&securityCode=' + cvvCode;\r\n                            }\r\n                        }\r\n                    }\r\n                     // disable the next:Place Order button here\r\n                    $('body').trigger('checkout:disableButton', '.next-step-button button');\r\n\r\n                    $.ajax({\r\n                        url: $('#dwfrm_billing').attr('action'),\r\n                        method: 'POST',\r\n                        data: paymentForm,\r\n                        success: function (data) {\r\n                             // enable the next:Place Order button here\r\n                            $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                            // look for field validation errors\r\n                            if (data.error) {\r\n                                if (data.fieldErrors.length) {\r\n                                    data.fieldErrors.forEach(function (error) {\r\n                                        if (Object.keys(error).length) {\r\n                                            formHelpers.loadFormErrors('.payment-form', error);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                                if (data.serverErrors.length) {\r\n                                    data.serverErrors.forEach(function (error) {\r\n                                        $('.error-message').show();\r\n                                        $('.error-message-text').text(error);\r\n                                        scrollAnimate($('.error-message'));\r\n                                    });\r\n                                }\r\n\r\n                                if (data.cartError) {\r\n                                    window.location.href = data.redirectUrl;\r\n                                }\r\n\r\n                                defer.reject();\r\n                            } else {\r\n                                //\r\n                                // Populate the Address Summary\r\n                                //\r\n                                $('body').trigger('checkout:updateCheckoutView',\r\n                                    { order: data.order, customer: data.customer });\r\n\r\n                                if (data.renderedPaymentInstruments) {\r\n                                    $('.stored-payments').empty().html(\r\n                                        data.renderedPaymentInstruments\r\n                                    );\r\n                                }\r\n\r\n                                if (data.customer.registeredUser\r\n                                    && data.customer.customerPaymentInstruments.length\r\n                                ) {\r\n                                    $('.cancel-new-payment').removeClass('checkout-hidden');\r\n                                }\r\n\r\n                                scrollAnimate();\r\n                                defer.resolve(data);\r\n                            }\r\n                        },\r\n                        error: function (err) {\r\n                            // enable the next:Place Order button here\r\n                            $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                            if (err.responseJSON && err.responseJSON.redirectUrl) {\r\n                                window.location.href = err.responseJSON.redirectUrl;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    return defer;\r\n                } else if (stage === 'placeOrder') {\r\n                    // disable the placeOrder button here\r\n                    $('body').trigger('checkout:disableButton', '.next-step-button button');\r\n                    $.ajax({\r\n                        url: $('.place-order').data('action'),\r\n                        method: 'POST',\r\n                        success: function (data) {\r\n                            // enable the placeOrder button here\r\n                            $('body').trigger('checkout:enableButton', '.next-step-button button');\r\n                            if (data.error) {\r\n                                if (data.cartError) {\r\n                                    window.location.href = data.redirectUrl;\r\n                                    defer.reject();\r\n                                } else {\r\n                                    // go to appropriate stage and display error message\r\n                                    defer.reject(data);\r\n                                }\r\n                            } else {\r\n                                var continueUrl = data.continueUrl;\r\n                                var urlParams = {\r\n                                    ID: data.orderID,\r\n                                    token: data.orderToken\r\n                                };\r\n\r\n                                continueUrl += (continueUrl.indexOf('?') !== -1 ? '&' : '?') +\r\n                                    Object.keys(urlParams).map(function (key) {\r\n                                        return key + '=' + encodeURIComponent(urlParams[key]);\r\n                                    }).join('&');\r\n\r\n                                window.location.href = continueUrl;\r\n                                defer.resolve(data);\r\n                            }\r\n                        },\r\n                        error: function () {\r\n                            // enable the placeOrder button here\r\n                            $('body').trigger('checkout:enableButton', $('.next-step-button button'));\r\n                        }\r\n                    });\r\n\r\n                    return defer;\r\n                }\r\n                var p = $('<div>').promise(); // eslint-disable-line\r\n                setTimeout(function () {\r\n                    p.done(); // eslint-disable-line\r\n                }, 500);\r\n                return p; // eslint-disable-line\r\n            },\r\n\r\n            /**\r\n             * Initialize the checkout stage.\r\n             */\r\n            initialize: function () {\r\n                // set the initial state of checkout\r\n                members.currentStage = checkoutStages\r\n                    .indexOf($('.data-checkout-stage').data('checkout-stage'));\r\n                $(plugin).attr('data-checkout-stage', checkoutStages[members.currentStage]);\r\n\r\n                //\r\n                // Handle Payment option selection\r\n                //\r\n                $('input[name$=\"paymentMethod\"]', plugin).on('change', function () {\r\n                    $('.credit-card-form').toggle($(this).val() === 'CREDIT_CARD');\r\n                });\r\n\r\n                //\r\n                // Handle Next State button click\r\n                //\r\n                $(plugin).on('click', '.next-step-button button', function () {\r\n                    members.nextStage();\r\n                });\r\n\r\n                //\r\n                // Handle Edit buttons on shipping and payment summary cards\r\n                //\r\n                $('.shipping-summary .edit-button', plugin).on('click', function () {\r\n                    if (!$('#checkout-main').hasClass('multi-ship')) {\r\n                        $('body').trigger('shipping:selectSingleShipping');\r\n                    }\r\n\r\n                    members.gotoStage('shipping');\r\n                });\r\n\r\n                $('.payment-summary .edit-button', plugin).on('click', function () {\r\n                    members.gotoStage('payment');\r\n                });\r\n\r\n                //\r\n                // remember stage (e.g. shipping)\r\n                //\r\n                updateUrl(members.currentStage);\r\n\r\n                //\r\n                // Listen for foward/back button press and move to correct checkout-stage\r\n                //\r\n                $(window).on('popstate', function (e) {\r\n                    //\r\n                    // Back button when event state less than current state in ordered\r\n                    // checkoutStages array.\r\n                    //\r\n                    if (e.state === null ||\r\n                        checkoutStages.indexOf(e.state) < members.currentStage) {\r\n                        members.handlePrevStage(false);\r\n                    } else if (checkoutStages.indexOf(e.state) > members.currentStage) {\r\n                        // Forward button  pressed\r\n                        members.handleNextStage(false);\r\n                    }\r\n                });\r\n\r\n                //\r\n                // Set the form data\r\n                //\r\n                plugin.data('formData', formData);\r\n            },\r\n\r\n            /**\r\n             * The next checkout state step updates the css for showing correct buttons etc...\r\n             */\r\n            nextStage: function () {\r\n                var promise = members.updateStage();\r\n\r\n                promise.done(function () {\r\n                    // Update UI with new stage\r\n                    members.handleNextStage(true);\r\n                });\r\n\r\n                promise.fail(function (data) {\r\n                    // show errors\r\n                    if (data) {\r\n                        if (data.errorStage) {\r\n                            members.gotoStage(data.errorStage.stage);\r\n\r\n                            if (data.errorStage.step === 'billingAddress') {\r\n                                var $billingAddressSameAsShipping = $(\r\n                                    'input[name$=\"_shippingAddressUseAsBillingAddress\"]'\r\n                                );\r\n                                if ($billingAddressSameAsShipping.is(':checked')) {\r\n                                    $billingAddressSameAsShipping.prop('checked', false);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (data.errorMessage) {\r\n                            $('.error-message').show();\r\n                            $('.error-message-text').text(data.errorMessage);\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * The next checkout state step updates the css for showing correct buttons etc...\r\n             *\r\n             * @param {boolean} bPushState - boolean when true pushes state using the history api.\r\n             */\r\n            handleNextStage: function (bPushState) {\r\n                if (members.currentStage < checkoutStages.length - 1) {\r\n                    // move stage forward\r\n                    members.currentStage++;\r\n\r\n                    //\r\n                    // show new stage in url (e.g.payment)\r\n                    //\r\n                    if (bPushState) {\r\n                        updateUrl(members.currentStage);\r\n                    }\r\n                }\r\n\r\n                // Set the next stage on the DOM\r\n                $(plugin).attr('data-checkout-stage', checkoutStages[members.currentStage]);\r\n            },\r\n\r\n            /**\r\n             * Previous State\r\n             */\r\n            handlePrevStage: function () {\r\n                if (members.currentStage > 0) {\r\n                    // move state back\r\n                    members.currentStage--;\r\n                    updateUrl(members.currentStage);\r\n                }\r\n\r\n                $(plugin).attr('data-checkout-stage', checkoutStages[members.currentStage]);\r\n            },\r\n\r\n            /**\r\n             * Use window history to go to a checkout stage\r\n             * @param {string} stageName - the checkout state to goto\r\n             */\r\n            gotoStage: function (stageName) {\r\n                members.currentStage = checkoutStages.indexOf(stageName);\r\n                updateUrl(members.currentStage);\r\n                $(plugin).attr('data-checkout-stage', checkoutStages[members.currentStage]);\r\n            }\r\n        };\r\n\r\n        //\r\n        // Initialize the checkout\r\n        //\r\n        members.initialize();\r\n\r\n        return this;\r\n    };\r\n}(jQuery));\r\n\r\n\r\nvar exports = {\r\n    initialize: function () {\r\n        $('#checkout-main').checkout();\r\n    },\r\n\r\n    updateCheckoutView: function () {\r\n        $('body').on('checkout:updateCheckoutView', function (e, data) {\r\n            shippingHelpers.methods.updateMultiShipInformation(data.order);\r\n            summaryHelpers.updateTotals(data.order.totals);\r\n            data.order.shipping.forEach(function (shipping) {\r\n                shippingHelpers.methods.updateShippingInformation(\r\n                    shipping,\r\n                    data.order,\r\n                    data.customer,\r\n                    data.options\r\n                );\r\n            });\r\n            billingHelpers.methods.updateBillingInformation(\r\n                data.order,\r\n                data.customer,\r\n                data.options\r\n            );\r\n            billingHelpers.methods.updatePaymentInformation(data.order, data.options);\r\n            summaryHelpers.updateOrderProductSummaryInformation(data.order, data.options);\r\n        });\r\n    },\r\n\r\n    disableButton: function () {\r\n        $('body').on('checkout:disableButton', function (e, button) {\r\n            $(button).prop('disabled', true);\r\n        });\r\n    },\r\n\r\n    enableButton: function () {\r\n        $('body').on('checkout:enableButton', function (e, button) {\r\n            $(button).prop('disabled', false);\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n[billingHelpers, shippingHelpers, addressHelpers].forEach(function (library) {\r\n    Object.keys(library).forEach(function (item) {\r\n        if (typeof library[item] === 'object') {\r\n            exports[item] = $.extend({}, exports[item], library[item]);\r\n        } else {\r\n            exports[item] = library[item];\r\n        }\r\n    });\r\n});\r\n\r\nmodule.exports = exports;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar addressHelpers = __webpack_require__(4);\r\nvar formHelpers = __webpack_require__(2);\r\nvar scrollAnimate = __webpack_require__(0);\r\n\r\n/**\r\n * updates the shipping address selector within shipping forms\r\n * @param {Object} productLineItem - the productLineItem model\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n * @param {Object} order - the order model\r\n * @param {Object} customer - the customer model\r\n */\r\nfunction updateShippingAddressSelector(productLineItem, shipping, order, customer) {\r\n    var uuidEl = $('input[value=' + productLineItem.UUID + ']');\r\n    var shippings = order.shipping;\r\n\r\n    var form;\r\n    var $shippingAddressSelector;\r\n    var hasSelectedAddress = false;\r\n\r\n    if (uuidEl && uuidEl.length > 0) {\r\n        form = uuidEl[0].form;\r\n        $shippingAddressSelector = $('.addressSelector', form);\r\n    }\r\n\r\n    if ($shippingAddressSelector && $shippingAddressSelector.length === 1) {\r\n        $shippingAddressSelector.empty();\r\n        // Add New Address option\r\n        $shippingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n            null,\r\n            false,\r\n            order\r\n        ));\r\n\r\n        if (customer.addresses && customer.addresses.length > 0) {\r\n            $shippingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n                order.resources.accountAddresses,\r\n                false,\r\n                order\r\n            ));\r\n\r\n            customer.addresses.forEach(function (address) {\r\n                var isSelected = shipping.matchingAddressId === address.ID;\r\n                $shippingAddressSelector.append(\r\n                    addressHelpers.methods.optionValueForAddress(\r\n                        { UUID: 'ab_' + address.ID, shippingAddress: address },\r\n                        isSelected,\r\n                        order\r\n                    )\r\n                );\r\n            });\r\n        }\r\n        // Separator -\r\n        $shippingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n            order.resources.shippingAddresses, false, order, { className: 'multi-shipping' }\r\n        ));\r\n        shippings.forEach(function (aShipping) {\r\n            var isSelected = shipping.UUID === aShipping.UUID;\r\n            hasSelectedAddress = hasSelectedAddress || isSelected;\r\n            var addressOption = addressHelpers.methods.optionValueForAddress(\r\n                aShipping,\r\n                isSelected,\r\n                order,\r\n                { className: 'multi-shipping' }\r\n            );\r\n\r\n            var newAddress = addressOption.html() === order.resources.addNewAddress;\r\n            var matchingUUID = aShipping.UUID === shipping.UUID;\r\n            if ((newAddress && matchingUUID) || (!newAddress && matchingUUID) || (!newAddress && !matchingUUID)) {\r\n                $shippingAddressSelector.append(addressOption);\r\n            }\r\n            if (newAddress && !matchingUUID) {\r\n                $(addressOption[0]).remove();\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!hasSelectedAddress) {\r\n        // show\r\n        $(form).addClass('hide-details');\r\n    } else {\r\n        $(form).removeClass('hide-details');\r\n    }\r\n\r\n    $('body').trigger('shipping:updateShippingAddressSelector', {\r\n        productLineItem: productLineItem,\r\n        shipping: shipping,\r\n        order: order,\r\n        customer: customer\r\n    });\r\n}\r\n\r\n/**\r\n * updates the shipping address form values within shipping forms\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n */\r\nfunction updateShippingAddressFormValues(shipping) {\r\n    var addressObject = $.extend({}, shipping.shippingAddress);\r\n\r\n    if (!addressObject) {\r\n        addressObject = {\r\n            firstName: null,\r\n            lastName: null,\r\n            address1: null,\r\n            address2: null,\r\n            city: null,\r\n            postalCode: null,\r\n            stateCode: null,\r\n            countryCode: null,\r\n            phone: null\r\n        };\r\n    }\r\n\r\n    addressObject.isGift = shipping.isGift;\r\n    addressObject.giftMessage = shipping.giftMessage;\r\n\r\n    $('input[value=' + shipping.UUID + ']').each(function (formIndex, el) {\r\n        var form = el.form;\r\n        if (!form) return;\r\n        var countryCode = addressObject.countryCode;\r\n\r\n        $('input[name$=_firstName]', form).val(addressObject.firstName);\r\n        $('input[name$=_lastName]', form).val(addressObject.lastName);\r\n        $('input[name$=_address1]', form).val(addressObject.address1);\r\n        $('input[name$=_address2]', form).val(addressObject.address2);\r\n        $('input[name$=_city]', form).val(addressObject.city);\r\n        $('input[name$=_postalCode]', form).val(addressObject.postalCode);\r\n        $('select[name$=_stateCode],input[name$=_stateCode]', form)\r\n            .val(addressObject.stateCode);\r\n\r\n        if (countryCode && typeof countryCode === 'object') {\r\n            $('select[name$=_country]', form).val(addressObject.countryCode.value);\r\n        } else {\r\n            $('select[name$=_country]', form).val(addressObject.countryCode);\r\n        }\r\n\r\n        $('input[name$=_phone]', form).val(addressObject.phone);\r\n\r\n        $('input[name$=_isGift]', form).prop('checked', addressObject.isGift);\r\n        $('textarea[name$=_giftMessage]', form).val(addressObject.isGift && addressObject.giftMessage ? addressObject.giftMessage : '');\r\n    });\r\n\r\n    $('body').trigger('shipping:updateShippingAddressFormValues', { shipping: shipping });\r\n}\r\n\r\n/**\r\n * updates the shipping method radio buttons within shipping forms\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n */\r\nfunction updateShippingMethods(shipping) {\r\n    var uuidEl = $('input[value=' + shipping.UUID + ']');\r\n    if (uuidEl && uuidEl.length > 0) {\r\n        $.each(uuidEl, function (shipmentIndex, el) {\r\n            var form = el.form;\r\n            if (!form) return;\r\n\r\n            var $shippingMethodList = $('.shipping-method-list', form);\r\n\r\n            if ($shippingMethodList && $shippingMethodList.length > 0) {\r\n                $shippingMethodList.empty();\r\n                var shippingMethods = shipping.applicableShippingMethods;\r\n                var selected = shipping.selectedShippingMethod || {};\r\n                var shippingMethodFormID = form.name + '_shippingAddress_shippingMethodID';\r\n                //\r\n                // Create the new rows for each shipping method\r\n                //\r\n                $.each(shippingMethods, function (methodIndex, shippingMethod) {\r\n                    var tmpl = $('#shipping-method-template').clone();\r\n                    // set input\r\n                    $('input', tmpl)\r\n                        .prop('id', 'shippingMethod-' + shippingMethod.ID + '-' + shipping.UUID)\r\n                        .prop('name', shippingMethodFormID)\r\n                        .prop('value', shippingMethod.ID)\r\n                        .attr('checked', shippingMethod.ID === selected.ID);\r\n\r\n                    $('label', tmpl)\r\n                        .prop('for', 'shippingMethod-' + shippingMethod.ID + '-' + shipping.UUID);\r\n                    // set shipping method name\r\n                    $('.display-name', tmpl).text(shippingMethod.displayName);\r\n                    // set or hide arrival time\r\n                    if (shippingMethod.estimatedArrivalTime) {\r\n                        $('.arrival-time', tmpl)\r\n                            .text('(' + shippingMethod.estimatedArrivalTime + ')')\r\n                            .show();\r\n                    }\r\n                    // set shipping cost\r\n                    $('.shipping-cost', tmpl).text(shippingMethod.shippingCost);\r\n                    $shippingMethodList.append(tmpl.html());\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    $('body').trigger('shipping:updateShippingMethods', { shipping: shipping });\r\n}\r\n\r\n/**\r\n * Update list of available shipping methods whenever user modifies shipping address details.\r\n * @param {jQuery} $shippingForm - current shipping form\r\n */\r\nfunction updateShippingMethodList($shippingForm) {\r\n    // delay for autocomplete!\r\n    setTimeout(function () {\r\n        var $shippingMethodList = $shippingForm.find('.shipping-method-list');\r\n        var urlParams = addressHelpers.methods.getAddressFieldsFromUI($shippingForm);\r\n        var shipmentUUID = $shippingForm.find('[name=shipmentUUID]').val();\r\n        var url = $shippingMethodList.data('actionUrl');\r\n        urlParams.shipmentUUID = shipmentUUID;\r\n\r\n        $shippingMethodList.spinner().start();\r\n        $.ajax({\r\n            url: url,\r\n            type: 'post',\r\n            dataType: 'json',\r\n            data: urlParams,\r\n            success: function (data) {\r\n                if (data.error) {\r\n                    window.location.href = data.redirectUrl;\r\n                } else {\r\n                    $('body').trigger('checkout:updateCheckoutView',\r\n                        {\r\n                            order: data.order,\r\n                            customer: data.customer,\r\n                            options: { keepOpen: true }\r\n                        });\r\n\r\n                    $shippingMethodList.spinner().stop();\r\n                }\r\n            }\r\n        });\r\n    }, 300);\r\n}\r\n\r\n/**\r\n * updates the order shipping summary for an order shipment model\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n * @param {Object} order - the order model\r\n */\r\nfunction updateShippingSummaryInformation(shipping, order) {\r\n    $('[data-shipment-summary=' + shipping.UUID + ']').each(function (i, el) {\r\n        var $container = $(el);\r\n        var $shippingAddressLabel = $container.find('.shipping-addr-label');\r\n        var $addressContainer = $container.find('.address-summary');\r\n        var $shippingPhone = $container.find('.shipping-phone');\r\n        var $methodTitle = $container.find('.shipping-method-title');\r\n        var $methodArrivalTime = $container.find('.shipping-method-arrival-time');\r\n        var $methodPrice = $container.find('.shipping-method-price');\r\n        var $shippingSummaryLabel = $container.find('.shipping-method-label');\r\n        var $summaryDetails = $container.find('.row.summary-details');\r\n        var giftMessageSummary = $container.find('.gift-summary');\r\n\r\n        var address = shipping.shippingAddress;\r\n        var selectedShippingMethod = shipping.selectedShippingMethod;\r\n        var isGift = shipping.isGift;\r\n\r\n        addressHelpers.methods.populateAddressSummary($addressContainer, address);\r\n\r\n        if (address && address.phone) {\r\n            $shippingPhone.text(address.phone);\r\n        } else {\r\n            $shippingPhone.empty();\r\n        }\r\n\r\n        if (selectedShippingMethod) {\r\n            $('body').trigger('shipping:updateAddressLabelText',\r\n                { selectedShippingMethod: selectedShippingMethod, resources: order.resources, shippingAddressLabel: $shippingAddressLabel });\r\n            $shippingSummaryLabel.show();\r\n            $summaryDetails.show();\r\n            $methodTitle.text(selectedShippingMethod.displayName);\r\n            if (selectedShippingMethod.estimatedArrivalTime) {\r\n                $methodArrivalTime.text(\r\n                    '( ' + selectedShippingMethod.estimatedArrivalTime + ' )'\r\n                );\r\n            } else {\r\n                $methodArrivalTime.empty();\r\n            }\r\n            $methodPrice.text(selectedShippingMethod.shippingCost);\r\n        }\r\n\r\n        if (isGift) {\r\n            giftMessageSummary.find('.gift-message-summary').text(shipping.giftMessage);\r\n            giftMessageSummary.removeClass('d-none');\r\n        } else {\r\n            giftMessageSummary.addClass('d-none');\r\n        }\r\n    });\r\n\r\n    $('body').trigger('shipping:updateShippingSummaryInformation', { shipping: shipping, order: order });\r\n}\r\n\r\n/**\r\n * Update the read-only portion of the shipment display (per PLI)\r\n * @param {Object} productLineItem - the productLineItem model\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n * @param {Object} order - the order model\r\n * @param {Object} [options] - options for updating PLI summary info\r\n * @param {Object} [options.keepOpen] - if true, prevent changing PLI view mode to 'view'\r\n */\r\nfunction updatePLIShippingSummaryInformation(productLineItem, shipping, order, options) {\r\n    var $pli = $('input[value=' + productLineItem.UUID + ']');\r\n    var form = $pli && $pli.length > 0 ? $pli[0].form : null;\r\n\r\n    if (!form) return;\r\n\r\n    var $viewBlock = $('.view-address-block', form);\r\n\r\n    var address = shipping.shippingAddress || {};\r\n    var selectedMethod = shipping.selectedShippingMethod;\r\n\r\n    var nameLine = address.firstName ? address.firstName + ' ' : '';\r\n    if (address.lastName) nameLine += address.lastName;\r\n\r\n    var address1Line = address.address1;\r\n    var address2Line = address.address2;\r\n\r\n    var phoneLine = address.phone;\r\n\r\n    var shippingCost = selectedMethod ? selectedMethod.shippingCost : '';\r\n    var methodNameLine = selectedMethod ? selectedMethod.displayName : '';\r\n    var methodArrivalTime = selectedMethod && selectedMethod.estimatedArrivalTime\r\n        ? '(' + selectedMethod.estimatedArrivalTime + ')'\r\n        : '';\r\n\r\n    var tmpl = $('#pli-shipping-summary-template').clone();\r\n\r\n    $('.ship-to-name', tmpl).text(nameLine);\r\n    $('.ship-to-address1', tmpl).text(address1Line);\r\n    $('.ship-to-address2', tmpl).text(address2Line);\r\n    $('.ship-to-city', tmpl).text(address.city);\r\n    if (address.stateCode) {\r\n        $('.ship-to-st', tmpl).text(address.stateCode);\r\n    }\r\n    $('.ship-to-zip', tmpl).text(address.postalCode);\r\n    $('.ship-to-phone', tmpl).text(phoneLine);\r\n\r\n    if (!address2Line) {\r\n        $('.ship-to-address2', tmpl).hide();\r\n    }\r\n\r\n    if (!phoneLine) {\r\n        $('.ship-to-phone', tmpl).hide();\r\n    }\r\n\r\n    if (shipping.selectedShippingMethod) {\r\n        $('.display-name', tmpl).text(methodNameLine);\r\n        $('.arrival-time', tmpl).text(methodArrivalTime);\r\n        $('.price', tmpl).text(shippingCost);\r\n    }\r\n\r\n    if (shipping.isGift) {\r\n        $('.gift-message-summary', tmpl).text(shipping.giftMessage);\r\n        var shipment = $('.gift-message-' + shipping.UUID);\r\n        $(shipment).val(shipping.giftMessage);\r\n    } else {\r\n        $('.gift-summary', tmpl).addClass('d-none');\r\n    }\r\n    // checking h5 title shipping to or pickup\r\n    var $shippingAddressLabel = $('.shipping-header-text', tmpl);\r\n    $('body').trigger('shipping:updateAddressLabelText',\r\n        { selectedShippingMethod: selectedMethod, resources: order.resources, shippingAddressLabel: $shippingAddressLabel });\r\n\r\n    $viewBlock.html(tmpl.html());\r\n\r\n    $('body').trigger('shipping:updatePLIShippingSummaryInformation', {\r\n        productLineItem: productLineItem,\r\n        shipping: shipping,\r\n        order: order,\r\n        options: options\r\n    });\r\n}\r\n\r\n/**\r\n * Update the hidden form values that associate shipping info with product line items\r\n * @param {Object} productLineItem - the productLineItem model\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n */\r\nfunction updateProductLineItemShipmentUUIDs(productLineItem, shipping) {\r\n    $('input[value=' + productLineItem.UUID + ']').each(function (key, pli) {\r\n        var form = pli.form;\r\n        $('[name=shipmentUUID]', form).val(shipping.UUID);\r\n        $('[name=originalShipmentUUID]', form).val(shipping.UUID);\r\n\r\n        $(form).closest('.card').attr('data-shipment-uuid', shipping.UUID);\r\n    });\r\n\r\n    $('body').trigger('shipping:updateProductLineItemShipmentUUIDs', {\r\n        productLineItem: productLineItem,\r\n        shipping: shipping\r\n    });\r\n}\r\n\r\n/**\r\n * Update the shipping UI for a single shipping info (shipment model)\r\n * @param {Object} shipping - the shipping (shipment model) model\r\n * @param {Object} order - the order/basket model\r\n * @param {Object} customer - the customer model\r\n * @param {Object} [options] - options for updating PLI summary info\r\n * @param {Object} [options.keepOpen] - if true, prevent changing PLI view mode to 'view'\r\n */\r\nfunction updateShippingInformation(shipping, order, customer, options) {\r\n    // First copy over shipmentUUIDs from response, to each PLI form\r\n    order.shipping.forEach(function (aShipping) {\r\n        aShipping.productLineItems.items.forEach(function (productLineItem) {\r\n            updateProductLineItemShipmentUUIDs(productLineItem, aShipping);\r\n        });\r\n    });\r\n\r\n    // Now update shipping information, based on those associations\r\n    updateShippingMethods(shipping);\r\n    updateShippingAddressFormValues(shipping);\r\n    updateShippingSummaryInformation(shipping, order);\r\n\r\n    // And update the PLI-based summary information as well\r\n    shipping.productLineItems.items.forEach(function (productLineItem) {\r\n        updateShippingAddressSelector(productLineItem, shipping, order, customer);\r\n        updatePLIShippingSummaryInformation(productLineItem, shipping, order, options);\r\n    });\r\n\r\n    $('body').trigger('shipping:updateShippingInformation', {\r\n        order: order,\r\n        shipping: shipping,\r\n        customer: customer,\r\n        options: options\r\n    });\r\n}\r\n\r\n/**\r\n * Update the checkout state (single vs. multi-ship)\r\n * @param {Object} order - checkout model to use as basis of new truth\r\n */\r\nfunction updateMultiShipInformation(order) {\r\n    var $checkoutMain = $('#checkout-main');\r\n    var $checkbox = $('[name=usingMultiShipping]');\r\n    var $submitShippingBtn = $('button.submit-shipping');\r\n    $('.shipping-error .alert-danger').remove();\r\n\r\n    if (order.usingMultiShipping) {\r\n        $checkoutMain.addClass('multi-ship');\r\n        $checkbox.prop('checked', true);\r\n    } else {\r\n        $checkoutMain.removeClass('multi-ship');\r\n        $checkbox.prop('checked', null);\r\n        $submitShippingBtn.prop('disabled', null);\r\n    }\r\n\r\n    $('body').trigger('shipping:updateMultiShipInformation', { order: order });\r\n}\r\n\r\n/**\r\n  * Create an alert to display the error message\r\n  * @param {Object} message - Error message to display\r\n  */\r\nfunction createErrorNotification(message) {\r\n    var errorHtml = '<div class=\"alert alert-danger alert-dismissible valid-cart-error ' +\r\n    'fade show\" role=\"alert\">' +\r\n    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\r\n    '<span aria-hidden=\"true\">&times;</span>' +\r\n    '</button>' + message + '</div>';\r\n\r\n    $('.shipping-error').append(errorHtml);\r\n    scrollAnimate($('.shipping-error'));\r\n}\r\n\r\n/**\r\n * Handle response from the server for valid or invalid form fields.\r\n * @param {Object} defer - the deferred object which will resolve on success or reject.\r\n * @param {Object} data - the response data with the invalid form fields or\r\n *  valid model data.\r\n */\r\nfunction shippingFormResponse(defer, data) {\r\n    var isMultiShip = $('#checkout-main').hasClass('multi-ship');\r\n    var formSelector = isMultiShip\r\n        ? '.multi-shipping .active form'\r\n        : '.single-shipping form';\r\n\r\n    // highlight fields with errors\r\n    if (data.error) {\r\n        if (data.fieldErrors.length) {\r\n            data.fieldErrors.forEach(function (error) {\r\n                if (Object.keys(error).length) {\r\n                    formHelpers.loadFormErrors(formSelector, error);\r\n                }\r\n            });\r\n            defer.reject(data);\r\n        }\r\n\r\n        if (data.serverErrors && data.serverErrors.length) {\r\n            $.each(data.serverErrors, function (index, element) {\r\n                createErrorNotification(element);\r\n            });\r\n\r\n            defer.reject(data);\r\n        }\r\n\r\n        if (data.cartError) {\r\n            window.location.href = data.redirectUrl;\r\n            defer.reject();\r\n        }\r\n    } else {\r\n        // Populate the Address Summary\r\n\r\n        $('body').trigger('checkout:updateCheckoutView', {\r\n            order: data.order,\r\n            customer: data.customer\r\n        });\r\n        scrollAnimate($('.payment-form'));\r\n        defer.resolve(data);\r\n    }\r\n}\r\n/**\r\n * Clear out all the shipping form values and select the new address in the drop down\r\n * @param {Object} order - the order object\r\n */\r\nfunction clearShippingForms(order) {\r\n    order.shipping.forEach(function (shipping) {\r\n        $('input[value=' + shipping.UUID + ']').each(function (formIndex, el) {\r\n            var form = el.form;\r\n            if (!form) return;\r\n\r\n            $('input[name$=_firstName]', form).val('');\r\n            $('input[name$=_lastName]', form).val('');\r\n            $('input[name$=_address1]', form).val('');\r\n            $('input[name$=_address2]', form).val('');\r\n            $('input[name$=_city]', form).val('');\r\n            $('input[name$=_postalCode]', form).val('');\r\n            $('select[name$=_stateCode],input[name$=_stateCode]', form).val('');\r\n            $('select[name$=_country]', form).val('');\r\n\r\n            $('input[name$=_phone]', form).val('');\r\n\r\n            $('input[name$=_isGift]', form).prop('checked', false);\r\n            $('textarea[name$=_giftMessage]', form).val('');\r\n            $(form).find('.gift-message').addClass('d-none');\r\n\r\n            $(form).attr('data-address-mode', 'new');\r\n            var addressSelectorDropDown = $('.addressSelector option[value=new]', form);\r\n            $(addressSelectorDropDown).prop('selected', true);\r\n        });\r\n    });\r\n\r\n    $('body').trigger('shipping:clearShippingForms', { order: order });\r\n}\r\n\r\n/**\r\n * Does Ajax call to create a server-side shipment w/ pliUUID & URL\r\n * @param {string} url - string representation of endpoint URL\r\n * @param {Object} shipmentData - product line item UUID\r\n * @returns {Object} - promise value for async call\r\n */\r\nfunction createNewShipment(url, shipmentData) {\r\n    $.spinner().start();\r\n    return $.ajax({\r\n        url: url,\r\n        type: 'post',\r\n        dataType: 'json',\r\n        data: shipmentData\r\n    });\r\n}\r\n\r\n/**\r\n * Does Ajax call to select shipping method\r\n * @param {string} url - string representation of endpoint URL\r\n * @param {Object} urlParams - url params\r\n * @param {Object} el - element that triggered this call\r\n */\r\nfunction selectShippingMethodAjax(url, urlParams, el) {\r\n    $.spinner().start();\r\n    $('body').trigger('checkout:beforeShippingMethodSelected');\r\n    $.ajax({\r\n        url: url,\r\n        type: 'post',\r\n        dataType: 'json',\r\n        data: urlParams\r\n    })\r\n        .done(function (data) {\r\n            if (data.error) {\r\n                window.location.href = data.redirectUrl;\r\n            } else {\r\n                $('body').trigger('checkout:updateCheckoutView',\r\n                    {\r\n                        order: data.order,\r\n                        customer: data.customer,\r\n                        options: { keepOpen: true },\r\n                        urlParams: urlParams\r\n                    }\r\n                );\r\n                $('body').trigger('checkout:postUpdateCheckoutView',\r\n                    {\r\n                        el: el\r\n                    }\r\n                );\r\n            }\r\n            $('body').trigger('checkout:shippingMethodSelected', data);\r\n            $.spinner().stop();\r\n        })\r\n        .fail(function () {\r\n            $.spinner().stop();\r\n        });\r\n}\r\n\r\n/**\r\n * Hide and show to appropriate elements to show the multi ship shipment cards in the enter view\r\n * @param {jQuery} element - The shipping content\r\n */\r\nfunction enterMultishipView(element) {\r\n    element.find('.btn-enter-multi-ship').removeClass('d-none');\r\n\r\n    element.find('.view-address-block').addClass('d-none');\r\n    element.find('.shipping-address').addClass('d-none');\r\n    element.find('.btn-save-multi-ship.save-shipment').addClass('d-none');\r\n    element.find('.btn-edit-multi-ship').addClass('d-none');\r\n    element.find('.multi-ship-address-actions').addClass('d-none');\r\n}\r\n\r\n/**\r\n * Hide and show to appropriate elements to show the multi ship shipment cards in the view mode\r\n * @param {jQuery} element - The shipping content\r\n */\r\nfunction viewMultishipAddress(element) {\r\n    element.find('.view-address-block').removeClass('d-none');\r\n    element.find('.btn-edit-multi-ship').removeClass('d-none');\r\n\r\n    element.find('.shipping-address').addClass('d-none');\r\n    element.find('.btn-save-multi-ship.save-shipment').addClass('d-none');\r\n    element.find('.btn-enter-multi-ship').addClass('d-none');\r\n    element.find('.multi-ship-address-actions').addClass('d-none');\r\n}\r\n\r\n/**\r\n * Hide and show to appropriate elements that allows the user to edit multi ship address information\r\n * @param {jQuery} element - The shipping content\r\n */\r\nfunction editMultiShipAddress(element) {\r\n    // Show\r\n    element.find('.shipping-address').removeClass('d-none');\r\n    element.find('.btn-save-multi-ship.save-shipment').removeClass('d-none');\r\n\r\n    // Hide\r\n    element.find('.view-address-block').addClass('d-none');\r\n    element.find('.btn-enter-multi-ship').addClass('d-none');\r\n    element.find('.btn-edit-multi-ship').addClass('d-none');\r\n    element.find('.multi-ship-address-actions').addClass('d-none');\r\n\r\n    $('body').trigger('shipping:editMultiShipAddress', { element: element, form: element.find('.shipping-form') });\r\n}\r\n\r\n/**\r\n * perform the proper actions once a user has clicked enter address or edit address for a shipment\r\n * @param {jQuery} element - The shipping content\r\n * @param {string} mode - the address mode\r\n */\r\nfunction editOrEnterMultiShipInfo(element, mode) {\r\n    var form = $(element).closest('form');\r\n    var root = $(element).closest('.shipping-content');\r\n\r\n    $('body').trigger('shipping:updateDataAddressMode', { form: form, mode: mode });\r\n\r\n    editMultiShipAddress(root);\r\n\r\n    var addressInfo = addressHelpers.methods.getAddressFieldsFromUI(form);\r\n\r\n    var savedState = {\r\n        UUID: $('input[name=shipmentUUID]', form).val(),\r\n        shippingAddress: addressInfo\r\n    };\r\n\r\n    root.data('saved-state', JSON.stringify(savedState));\r\n}\r\n\r\nmodule.exports = {\r\n    methods: {\r\n        updateShippingAddressSelector: updateShippingAddressSelector,\r\n        updateShippingAddressFormValues: updateShippingAddressFormValues,\r\n        updateShippingMethods: updateShippingMethods,\r\n        updateShippingSummaryInformation: updateShippingSummaryInformation,\r\n        updatePLIShippingSummaryInformation: updatePLIShippingSummaryInformation,\r\n        updateProductLineItemShipmentUUIDs: updateProductLineItemShipmentUUIDs,\r\n        updateShippingInformation: updateShippingInformation,\r\n        updateMultiShipInformation: updateMultiShipInformation,\r\n        shippingFormResponse: shippingFormResponse,\r\n        createNewShipment: createNewShipment,\r\n        selectShippingMethodAjax: selectShippingMethodAjax,\r\n        updateShippingMethodList: updateShippingMethodList,\r\n        clearShippingForms: clearShippingForms,\r\n        editMultiShipAddress: editMultiShipAddress,\r\n        editOrEnterMultiShipInfo: editOrEnterMultiShipInfo,\r\n        createErrorNotification: createErrorNotification,\r\n        viewMultishipAddress: viewMultishipAddress\r\n    },\r\n\r\n    selectShippingMethod: function () {\r\n        var baseObj = this;\r\n\r\n        $('.shipping-method-list').change(function () {\r\n            var $shippingForm = $(this).parents('form');\r\n            var methodID = $(':checked', this).val();\r\n            var shipmentUUID = $shippingForm.find('[name=shipmentUUID]').val();\r\n            var urlParams = addressHelpers.methods.getAddressFieldsFromUI($shippingForm);\r\n            urlParams.shipmentUUID = shipmentUUID;\r\n            urlParams.methodID = methodID;\r\n            urlParams.isGift = $shippingForm.find('.gift').prop('checked');\r\n            urlParams.giftMessage = $shippingForm.find('textarea[name$=_giftMessage]').val();\r\n\r\n            var url = $(this).data('select-shipping-method-url');\r\n\r\n            if (baseObj.methods && baseObj.methods.selectShippingMethodAjax) {\r\n                baseObj.methods.selectShippingMethodAjax(url, urlParams, $(this));\r\n            } else {\r\n                selectShippingMethodAjax(url, urlParams, $(this));\r\n            }\r\n        });\r\n    },\r\n\r\n    toggleMultiship: function () {\r\n        var baseObj = this;\r\n\r\n        $('input[name=\"usingMultiShipping\"]').on('change', function () {\r\n            var url = $('.multi-shipping-checkbox-block form').attr('action');\r\n            var usingMultiShip = this.checked;\r\n\r\n            $.ajax({\r\n                url: url,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                data: { usingMultiShip: usingMultiShip },\r\n                success: function (response) {\r\n                    if (response.error) {\r\n                        window.location.href = response.redirectUrl;\r\n                    } else {\r\n                        $('body').trigger('checkout:updateCheckoutView', {\r\n                            order: response.order,\r\n                            customer: response.customer\r\n                        });\r\n\r\n                        if ($('#checkout-main').data('customer-type') === 'guest') {\r\n                            if (baseObj.methods && baseObj.methods.clearShippingForms) {\r\n                                baseObj.methods.clearShippingForms(response.order);\r\n                            } else {\r\n                                clearShippingForms(response.order);\r\n                            }\r\n                        } else {\r\n                            response.order.shipping.forEach(function (shipping) {\r\n                                $('input[value=' + shipping.UUID + ']').each(function (formIndex, el) {\r\n                                    var form = el.form;\r\n                                    if (!form) return;\r\n\r\n                                    $(form).attr('data-address-mode', 'edit');\r\n                                    var addressSelectorDropDown = $(form).find('.addressSelector option[value=\"ab_' + shipping.matchingAddressId + '\"]');\r\n                                    $(addressSelectorDropDown).prop('selected', true);\r\n                                    $('input[name$=_isGift]', form).prop('checked', false);\r\n                                    $('textarea[name$=_giftMessage]', form).val('');\r\n                                    $(form).find('.gift-message').addClass('d-none');\r\n                                });\r\n                            });\r\n                        }\r\n\r\n                        if (usingMultiShip) {\r\n                            $('body').trigger('shipping:selectMultiShipping', { data: response });\r\n                        } else {\r\n                            $('body').trigger('shipping:selectSingleShipping', { data: response });\r\n                        }\r\n                    }\r\n\r\n                    $.spinner().stop();\r\n                },\r\n                error: function () {\r\n                    $.spinner().stop();\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    selectSingleShipping: function () {\r\n        $('body').on('shipping:selectSingleShipping', function () {\r\n            $('.single-shipping .shipping-address').removeClass('d-none');\r\n        });\r\n    },\r\n\r\n    selectMultiShipping: function () {\r\n        var baseObj = this;\r\n\r\n        $('body').on('shipping:selectMultiShipping', function (e, data) {\r\n            $('.multi-shipping .shipping-address').addClass('d-none');\r\n\r\n            data.data.order.shipping.forEach(function (shipping) {\r\n                var element = $('.multi-shipping .card[data-shipment-uuid=\"' + shipping.UUID + '\"]');\r\n\r\n                if (shipping.shippingAddress) {\r\n                    if (baseObj.methods && baseObj.methods.viewMultishipAddress) {\r\n                        baseObj.methods.viewMultishipAddress($(element));\r\n                    } else {\r\n                        viewMultishipAddress($(element));\r\n                    }\r\n                } else {\r\n                    /* eslint-disable no-lonely-if */\r\n                    if (baseObj.methods && baseObj.methods.enterMultishipView) {\r\n                        baseObj.methods.enterMultishipView($(element));\r\n                    } else {\r\n                        enterMultishipView($(element));\r\n                    }\r\n                    /* eslint-enable no-lonely-if */\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    selectSingleShipAddress: function () {\r\n        $('.single-shipping .addressSelector').on('change', function () {\r\n            var form = $(this).parents('form')[0];\r\n            var selectedOption = $('option:selected', this);\r\n            var attrs = selectedOption.data();\r\n            var shipmentUUID = selectedOption[0].value;\r\n            var originalUUID = $('input[name=shipmentUUID]', form).val();\r\n            var element;\r\n            Object.keys(attrs).forEach(function (attr) {\r\n                element = attr === 'countryCode' ? 'country' : attr;\r\n                $('[name$=' + element + ']', form).val(attrs[attr]);\r\n            });\r\n            $('[name$=stateCode]', form).trigger('change');\r\n            if (shipmentUUID === 'new') {\r\n                $(form).attr('data-address-mode', 'new');\r\n                $(form).find('.shipping-address-block').removeClass('d-none');\r\n            } else if (shipmentUUID === originalUUID) {\r\n                $(form).attr('data-address-mode', 'shipment');\r\n            } else if (shipmentUUID.indexOf('ab_') === 0) {\r\n                $(form).attr('data-address-mode', 'customer');\r\n            } else {\r\n                $(form).attr('data-address-mode', 'edit');\r\n            }\r\n        });\r\n    },\r\n\r\n    selectMultiShipAddress: function () {\r\n        var baseObj = this;\r\n\r\n        $('.multi-shipping .addressSelector').on('change', function () {\r\n            var form = $(this).closest('form');\r\n            var selectedOption = $('option:selected', this);\r\n            var attrs = selectedOption.data();\r\n            var shipmentUUID = selectedOption[0].value;\r\n            var originalUUID = $('input[name=shipmentUUID]', form).val();\r\n            var pliUUID = $('input[name=productLineItemUUID]', form).val();\r\n            var createNewShipmentScoped = baseObj.methods && baseObj.methods.createNewShipment ? baseObj.methods.createNewShipment : createNewShipment;\r\n\r\n            var element;\r\n            Object.keys(attrs).forEach(function (attr) {\r\n                if (attr === 'isGift') {\r\n                    $('[name$=' + attr + ']', form).prop('checked', attrs[attr]);\r\n                    $('[name$=' + attr + ']', form).trigger('change');\r\n                } else {\r\n                    element = attr === 'countryCode' ? 'country' : attr;\r\n                    $('[name$=' + element + ']', form).val(attrs[attr]);\r\n                }\r\n            });\r\n\r\n            if (shipmentUUID === 'new' && pliUUID) {\r\n                var createShipmentUrl = $(this).attr('data-create-shipment-url');\r\n                createNewShipmentScoped(createShipmentUrl, { productLineItemUUID: pliUUID })\r\n                    .done(function (response) {\r\n                        $.spinner().stop();\r\n                        if (response.error) {\r\n                            if (response.redirectUrl) {\r\n                                window.location.href = response.redirectUrl;\r\n                            }\r\n                            return;\r\n                        }\r\n\r\n                        $('body').trigger('checkout:updateCheckoutView',\r\n                            {\r\n                                order: response.order,\r\n                                customer: response.customer,\r\n                                options: { keepOpen: true }\r\n                            }\r\n                        );\r\n\r\n                        $(form).attr('data-address-mode', 'new');\r\n                    })\r\n                    .fail(function () {\r\n                        $.spinner().stop();\r\n                    });\r\n            } else if (shipmentUUID === originalUUID) {\r\n                $('select[name$=stateCode]', form).trigger('change');\r\n                $(form).attr('data-address-mode', 'shipment');\r\n            } else if (shipmentUUID.indexOf('ab_') === 0) {\r\n                var url = $(form).attr('action');\r\n                var serializedData = $(form).serialize();\r\n                createNewShipmentScoped(url, serializedData)\r\n                    .done(function (response) {\r\n                        $.spinner().stop();\r\n                        if (response.error) {\r\n                            if (response.redirectUrl) {\r\n                                window.location.href = response.redirectUrl;\r\n                            }\r\n                            return;\r\n                        }\r\n\r\n                        $('body').trigger('checkout:updateCheckoutView',\r\n                            {\r\n                                order: response.order,\r\n                                customer: response.customer,\r\n                                options: { keepOpen: true }\r\n                            }\r\n                        );\r\n\r\n                        $(form).attr('data-address-mode', 'customer');\r\n                        var $rootEl = $(form).closest('.shipping-content');\r\n                        editMultiShipAddress($rootEl);\r\n                    })\r\n                    .fail(function () {\r\n                        $.spinner().stop();\r\n                    });\r\n            } else {\r\n                var updatePLIShipmentUrl = $(form).attr('action');\r\n                var serializedAddress = $(form).serialize();\r\n                createNewShipmentScoped(updatePLIShipmentUrl, serializedAddress)\r\n                    .done(function (response) {\r\n                        $.spinner().stop();\r\n                        if (response.error) {\r\n                            if (response.redirectUrl) {\r\n                                window.location.href = response.redirectUrl;\r\n                            }\r\n                            return;\r\n                        }\r\n\r\n                        $('body').trigger('checkout:updateCheckoutView',\r\n                            {\r\n                                order: response.order,\r\n                                customer: response.customer,\r\n                                options: { keepOpen: true }\r\n                            }\r\n                        );\r\n\r\n                        $(form).attr('data-address-mode', 'edit');\r\n                    })\r\n                    .fail(function () {\r\n                        $.spinner().stop();\r\n                    });\r\n            }\r\n        });\r\n    },\r\n\r\n    updateShippingList: function () {\r\n        var baseObj = this;\r\n\r\n        $('select[name$=\"shippingAddress_addressFields_states_stateCode\"]')\r\n            .on('change', function (e) {\r\n                if (baseObj.methods && baseObj.methods.updateShippingMethodList) {\r\n                    baseObj.methods.updateShippingMethodList($(e.currentTarget.form));\r\n                } else {\r\n                    updateShippingMethodList($(e.currentTarget.form));\r\n                }\r\n            });\r\n    },\r\n\r\n    updateDataAddressMode: function () {\r\n        $('body').on('shipping:updateDataAddressMode', function (e, data) {\r\n            $(data.form).attr('data-address-mode', data.mode);\r\n        });\r\n    },\r\n\r\n    enterMultiShipInfo: function () {\r\n        var baseObj = this;\r\n\r\n        $('.btn-enter-multi-ship').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            if (baseObj.methods && baseObj.methods.editOrEnterMultiShipInfo) {\r\n                baseObj.methods.editOrEnterMultiShipInfo($(this), 'new');\r\n            } else {\r\n                editOrEnterMultiShipInfo($(this), 'new');\r\n            }\r\n        });\r\n    },\r\n\r\n    editMultiShipInfo: function () {\r\n        var baseObj = this;\r\n\r\n        $('.btn-edit-multi-ship').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            if (baseObj.methods && baseObj.methods.editOrEnterMultiShipInfo) {\r\n                baseObj.methods.editOrEnterMultiShipInfo($(this), 'edit');\r\n            } else {\r\n                editOrEnterMultiShipInfo($(this), 'edit');\r\n            }\r\n        });\r\n    },\r\n\r\n    saveMultiShipInfo: function () {\r\n        var baseObj = this;\r\n\r\n        $('.btn-save-multi-ship').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            // Save address to checkoutAddressBook\r\n            var form = $(this).closest('form');\r\n            var $rootEl = $(this).closest('.shipping-content');\r\n            var data = $(form).serialize();\r\n            var url = $(form).attr('action');\r\n\r\n            $rootEl.spinner().start();\r\n            $.ajax({\r\n                url: url,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                data: data\r\n            })\r\n                .done(function (response) {\r\n                    formHelpers.clearPreviousErrors(form);\r\n                    if (response.error) {\r\n                        if (response.fieldErrors && response.fieldErrors.length) {\r\n                            response.fieldErrors.forEach(function (error) {\r\n                                if (Object.keys(error).length) {\r\n                                    formHelpers.loadFormErrors(form, error);\r\n                                }\r\n                            });\r\n                        } else if (response.serverErrors && response.serverErrors.length) {\r\n                            $.each(response.serverErrors, function (index, element) {\r\n                                createErrorNotification(element);\r\n                            });\r\n                        } else if (response.redirectUrl) {\r\n                            window.location.href = response.redirectUrl;\r\n                        }\r\n                    } else {\r\n                        // Update UI from response\r\n                        $('body').trigger('checkout:updateCheckoutView',\r\n                            {\r\n                                order: response.order,\r\n                                customer: response.customer\r\n                            }\r\n                        );\r\n\r\n                        if (baseObj.methods && baseObj.methods.viewMultishipAddress) {\r\n                            baseObj.methods.viewMultishipAddress($rootEl);\r\n                        } else {\r\n                            viewMultishipAddress($rootEl);\r\n                        }\r\n                    }\r\n\r\n                    if (response.order && response.order.shippable) {\r\n                        $('button.submit-shipping').attr('disabled', null);\r\n                    }\r\n\r\n                    $rootEl.spinner().stop();\r\n                })\r\n                .fail(function (err) {\r\n                    if (err.responseJSON.redirectUrl) {\r\n                        window.location.href = err.responseJSON.redirectUrl;\r\n                    }\r\n\r\n                    $rootEl.spinner().stop();\r\n                });\r\n\r\n            return false;\r\n        });\r\n    },\r\n\r\n    cancelMultiShipAddress: function () {\r\n        var baseObj = this;\r\n\r\n        $('.btn-cancel-multi-ship-address').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            var form = $(this).closest('form');\r\n            var $rootEl = $(this).closest('.shipping-content');\r\n            var restoreState = $rootEl.data('saved-state');\r\n\r\n            // Should clear out changes / restore previous state\r\n            if (restoreState) {\r\n                var restoreStateObj = JSON.parse(restoreState);\r\n                var originalStateCode = restoreStateObj.shippingAddress.stateCode;\r\n                var stateCode = $('[name$=_stateCode]', form).val();\r\n\r\n                if (baseObj.methods && baseObj.methods.updateShippingAddressFormValues) {\r\n                    baseObj.methods.updateShippingAddressFormValues(restoreStateObj);\r\n                } else {\r\n                    updateShippingAddressFormValues(restoreStateObj);\r\n                }\r\n\r\n                if (stateCode !== originalStateCode) {\r\n                    $('[data-action=save]', form).trigger('click');\r\n                } else {\r\n                    $(form).attr('data-address-mode', 'edit');\r\n                    if (baseObj.methods && baseObj.methods.editMultiShipAddress) {\r\n                        baseObj.methods.editMultiShipAddress($rootEl);\r\n                    } else {\r\n                        editMultiShipAddress($rootEl);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n    },\r\n\r\n    isGift: function () {\r\n        $('.gift').on('change', function (e) {\r\n            e.preventDefault();\r\n            var form = $(this).closest('form');\r\n\r\n            if (this.checked) {\r\n                $(form).find('.gift-message').removeClass('d-none');\r\n            } else {\r\n                $(form).find('.gift-message').addClass('d-none');\r\n                $(form).find('.gift-message').val('');\r\n            }\r\n        });\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar addressHelpers = __webpack_require__(4);\r\nvar cleave = __webpack_require__(14);\r\n\r\n/**\r\n * updates the billing address selector within billing forms\r\n * @param {Object} order - the order model\r\n * @param {Object} customer - the customer model\r\n */\r\nfunction updateBillingAddressSelector(order, customer) {\r\n    var shippings = order.shipping;\r\n\r\n    var form = $('form[name$=billing]')[0];\r\n    var $billingAddressSelector = $('.addressSelector', form);\r\n    var hasSelectedAddress = false;\r\n\r\n    if ($billingAddressSelector && $billingAddressSelector.length === 1) {\r\n        $billingAddressSelector.empty();\r\n        // Add New Address option\r\n        $billingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n            null,\r\n            false,\r\n            order,\r\n            { type: 'billing' }));\r\n\r\n        // Separator -\r\n        $billingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n            order.resources.shippingAddresses, false, order, {\r\n                // className: 'multi-shipping',\r\n                type: 'billing'\r\n            }\r\n        ));\r\n\r\n        shippings.forEach(function (aShipping) {\r\n            var isSelected = order.billing.matchingAddressId === aShipping.UUID;\r\n            hasSelectedAddress = hasSelectedAddress || isSelected;\r\n            // Shipping Address option\r\n            $billingAddressSelector.append(\r\n                addressHelpers.methods.optionValueForAddress(aShipping, isSelected, order,\r\n                    {\r\n                        // className: 'multi-shipping',\r\n                        type: 'billing'\r\n                    }\r\n                )\r\n            );\r\n        });\r\n\r\n        if (customer.addresses && customer.addresses.length > 0) {\r\n            $billingAddressSelector.append(addressHelpers.methods.optionValueForAddress(\r\n                order.resources.accountAddresses, false, order));\r\n            customer.addresses.forEach(function (address) {\r\n                var isSelected = order.billing.matchingAddressId === address.ID;\r\n                hasSelectedAddress = hasSelectedAddress || isSelected;\r\n                // Customer Address option\r\n                $billingAddressSelector.append(\r\n                    addressHelpers.methods.optionValueForAddress({\r\n                        UUID: 'ab_' + address.ID,\r\n                        shippingAddress: address\r\n                    }, isSelected, order, { type: 'billing' })\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    if (hasSelectedAddress\r\n        || (!order.billing.matchingAddressId && order.billing.billingAddress.address)) {\r\n        // show\r\n        $(form).attr('data-address-mode', 'edit');\r\n    } else {\r\n        $(form).attr('data-address-mode', 'new');\r\n    }\r\n\r\n    $billingAddressSelector.show();\r\n}\r\n\r\n/**\r\n * updates the billing address form values within payment forms\r\n * @param {Object} order - the order model\r\n */\r\nfunction updateBillingAddressFormValues(order) {\r\n    var billing = order.billing;\r\n    if (!billing.billingAddress || !billing.billingAddress.address) return;\r\n\r\n    var form = $('form[name=dwfrm_billing]');\r\n    if (!form) return;\r\n\r\n    $('input[name$=_firstName]', form).val(billing.billingAddress.address.firstName);\r\n    $('input[name$=_lastName]', form).val(billing.billingAddress.address.lastName);\r\n    $('input[name$=_address1]', form).val(billing.billingAddress.address.address1);\r\n    $('input[name$=_address2]', form).val(billing.billingAddress.address.address2);\r\n    $('input[name$=_city]', form).val(billing.billingAddress.address.city);\r\n    $('input[name$=_postalCode]', form).val(billing.billingAddress.address.postalCode);\r\n    $('select[name$=_stateCode],input[name$=_stateCode]', form)\r\n        .val(billing.billingAddress.address.stateCode);\r\n    $('select[name$=_country]', form).val(billing.billingAddress.address.countryCode.value);\r\n    $('input[name$=_phone]', form).val(billing.billingAddress.address.phone);\r\n    $('input[name$=_email]', form).val(order.orderEmail);\r\n\r\n    if (billing.payment && billing.payment.selectedPaymentInstruments\r\n        && billing.payment.selectedPaymentInstruments.length > 0) {\r\n        var instrument = billing.payment.selectedPaymentInstruments[0];\r\n        $('select[name$=expirationMonth]', form).val(instrument.expirationMonth);\r\n        $('select[name$=expirationYear]', form).val(instrument.expirationYear);\r\n        // Force security code and card number clear\r\n        $('input[name$=securityCode]', form).val('');\r\n\r\n        if ($('input[name$=cardNumber]').data('cleave')) {\r\n            $('input[name$=cardNumber]').data('cleave').setRawValue('');\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * clears the billing address form values\r\n */\r\nfunction clearBillingAddressFormValues() {\r\n    updateBillingAddressFormValues({\r\n        billing: {\r\n            billingAddress: {\r\n                address: {\r\n                    countryCode: {}\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the billing information in checkout, based on the supplied order model\r\n * @param {Object} order - checkout model to use as basis of new truth\r\n * @param {Object} customer - customer model to use as basis of new truth\r\n * @param {Object} [options] - options\r\n */\r\nfunction updateBillingInformation(order, customer) {\r\n    updateBillingAddressSelector(order, customer);\r\n\r\n    // update billing address form\r\n    updateBillingAddressFormValues(order);\r\n\r\n    // update billing address summary\r\n    addressHelpers.methods.populateAddressSummary('.billing .address-summary',\r\n        order.billing.billingAddress.address);\r\n\r\n    // update billing parts of order summary\r\n    $('.order-summary-email').text(order.orderEmail);\r\n\r\n    if (order.billing.billingAddress.address) {\r\n        $('.order-summary-phone').text(order.billing.billingAddress.address.phone);\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the payment information in checkout, based on the supplied order model\r\n * @param {Object} order - checkout model to use as basis of new truth\r\n */\r\nfunction updatePaymentInformation(order) {\r\n    // update payment details\r\n    var $paymentSummary = $('.payment-details');\r\n    var htmlToAppend = '';\r\n\r\n    if (order.billing.payment && order.billing.payment.selectedPaymentInstruments\r\n        && order.billing.payment.selectedPaymentInstruments.length > 0) {\r\n        htmlToAppend += '<span>' + order.resources.cardType + ' '\r\n            + order.billing.payment.selectedPaymentInstruments[0].type\r\n            + '</span><div>'\r\n            + order.billing.payment.selectedPaymentInstruments[0].maskedCreditCardNumber\r\n            + '</div><div><span>'\r\n            + order.resources.cardEnding + ' '\r\n            + order.billing.payment.selectedPaymentInstruments[0].expirationMonth\r\n            + '/' + order.billing.payment.selectedPaymentInstruments[0].expirationYear\r\n            + '</span></div>';\r\n    }\r\n\r\n    $paymentSummary.empty().append(htmlToAppend);\r\n}\r\n\r\n/**\r\n * clears the credit card form\r\n */\r\nfunction clearCreditCardForm() {\r\n    $('input[name$=\"_cardNumber\"]').data('cleave').setRawValue('');\r\n    $('select[name$=\"_expirationMonth\"]').val('');\r\n    $('select[name$=\"_expirationYear\"]').val('');\r\n    $('input[name$=\"_securityCode\"]').val('');\r\n}\r\n\r\nmodule.exports = {\r\n    methods: {\r\n        updateBillingAddressSelector: updateBillingAddressSelector,\r\n        updateBillingAddressFormValues: updateBillingAddressFormValues,\r\n        clearBillingAddressFormValues: clearBillingAddressFormValues,\r\n        updateBillingInformation: updateBillingInformation,\r\n        updatePaymentInformation: updatePaymentInformation,\r\n        clearCreditCardForm: clearCreditCardForm\r\n    },\r\n\r\n    showBillingDetails: function () {\r\n        $('.btn-show-billing-details').on('click', function () {\r\n            $(this).parents('[data-address-mode]').attr('data-address-mode', 'new');\r\n        });\r\n    },\r\n\r\n    hideBillingDetails: function () {\r\n        $('.btn-hide-billing-details').on('click', function () {\r\n            $(this).parents('[data-address-mode]').attr('data-address-mode', 'shipment');\r\n        });\r\n    },\r\n\r\n    selectBillingAddress: function () {\r\n        $('.payment-form .addressSelector').on('change', function () {\r\n            var form = $(this).parents('form')[0];\r\n            var selectedOption = $('option:selected', this);\r\n            var optionID = selectedOption[0].value;\r\n\r\n            if (optionID === 'new') {\r\n                // Show Address\r\n                $(form).attr('data-address-mode', 'new');\r\n            } else {\r\n                // Hide Address\r\n                $(form).attr('data-address-mode', 'shipment');\r\n            }\r\n\r\n            // Copy fields\r\n            var attrs = selectedOption.data();\r\n            var element;\r\n\r\n            Object.keys(attrs).forEach(function (attr) {\r\n                element = attr === 'countryCode' ? 'country' : attr;\r\n                if (element === 'cardNumber') {\r\n                    $('.cardNumber').data('cleave').setRawValue(attrs[attr]);\r\n                } else {\r\n                    $('[name$=' + element + ']', form).val(attrs[attr]);\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    handleCreditCardNumber: function () {\r\n        cleave.handleCreditCardNumber('.cardNumber', '#cardType');\r\n    },\r\n\r\n    santitizeForm: function () {\r\n        $('body').on('checkout:serializeBilling', function (e, data) {\r\n            var serializedForm = cleave.serializeData(data.form);\r\n\r\n            data.callback(serializedForm);\r\n        });\r\n    },\r\n\r\n    selectSavedPaymentInstrument: function () {\r\n        $(document).on('click', '.saved-payment-instrument', function (e) {\r\n            e.preventDefault();\r\n            $('.saved-payment-security-code').val('');\r\n            $('.saved-payment-instrument').removeClass('selected-payment');\r\n            $(this).addClass('selected-payment');\r\n            $('.saved-payment-instrument .card-image').removeClass('checkout-hidden');\r\n            $('.saved-payment-instrument .security-code-input').addClass('checkout-hidden');\r\n            $('.saved-payment-instrument.selected-payment' +\r\n                ' .card-image').addClass('checkout-hidden');\r\n            $('.saved-payment-instrument.selected-payment ' +\r\n                '.security-code-input').removeClass('checkout-hidden');\r\n        });\r\n    },\r\n\r\n    addNewPaymentInstrument: function () {\r\n        $('.btn.add-payment').on('click', function (e) {\r\n            e.preventDefault();\r\n            $('.payment-information').data('is-new-payment', true);\r\n            clearCreditCardForm();\r\n            $('.credit-card-form').removeClass('checkout-hidden');\r\n            $('.user-payment-instruments').addClass('checkout-hidden');\r\n        });\r\n    },\r\n\r\n    cancelNewPayment: function () {\r\n        $('.cancel-new-payment').on('click', function (e) {\r\n            e.preventDefault();\r\n            $('.payment-information').data('is-new-payment', false);\r\n            clearCreditCardForm();\r\n            $('.user-payment-instruments').removeClass('checkout-hidden');\r\n            $('.credit-card-form').addClass('checkout-hidden');\r\n        });\r\n    },\r\n\r\n    clearBillingForm: function () {\r\n        $('body').on('checkout:clearBillingForm', function () {\r\n            clearBillingAddressFormValues();\r\n        });\r\n    },\r\n\r\n    paymentTabs: function () {\r\n        $('.payment-options .nav-item').on('click', function (e) {\r\n            e.preventDefault();\r\n            var methodID = $(this).data('method-id');\r\n            $('.payment-information').data('payment-method-id', methodID);\r\n        });\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\nvar Cleave = __webpack_require__(15).default;\r\n\r\nmodule.exports = {\r\n    handleCreditCardNumber: function (cardFieldSelector, cardTypeSelector) {\r\n        var cleave = new Cleave(cardFieldSelector, {\r\n            creditCard: true,\r\n            onCreditCardTypeChanged: function (type) {\r\n                var creditCardTypes = {\r\n                    visa: 'Visa',\r\n                    mastercard: 'Master Card',\r\n                    amex: 'Amex',\r\n                    discover: 'Discover',\r\n                    unknown: 'Unknown'\r\n                };\r\n\r\n                var cardType = creditCardTypes[Object.keys(creditCardTypes).indexOf(type) > -1\r\n                    ? type\r\n                    : 'unknown'];\r\n                $(cardTypeSelector).val(cardType);\r\n                $('.card-number-wrapper').attr('data-type', type);\r\n                if (type === 'visa' || type === 'mastercard' || type === 'discover') {\r\n                    $('#securityCode').attr('maxlength', 3);\r\n                } else {\r\n                    $('#securityCode').attr('maxlength', 4);\r\n                }\r\n            }\r\n        });\r\n\r\n        $(cardFieldSelector).data('cleave', cleave);\r\n    },\r\n\r\n    serializeData: function (form) {\r\n        var serializedArray = form.serializeArray();\r\n\r\n        serializedArray.forEach(function (item) {\r\n            if (item.name.indexOf('cardNumber') > -1) {\r\n                item.value = $('#cardNumber').data('cleave').getRawValue(); // eslint-disable-line\r\n            }\r\n        });\r\n\r\n        return $.param(serializedArray);\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3RvcmVmcm9udC1yZWZlcmVuY2UtYXJjaGl0ZWN0dXJlL2NhcnRyaWRnZXMvYXBwX3N0b3JlZnJvbnRfYmFzZS9jYXJ0cmlkZ2UvY2xpZW50L2RlZmF1bHQvanMvY29tcG9uZW50cy9jbGVhdmUuanM/OGFlYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixhQUFhLG1CQUFPLENBQUMsRUFBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJFQUEyRTtBQUMzRTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIENsZWF2ZSA9IHJlcXVpcmUoJ2NsZWF2ZS5qcycpLmRlZmF1bHQ7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGhhbmRsZUNyZWRpdENhcmROdW1iZXI6IGZ1bmN0aW9uIChjYXJkRmllbGRTZWxlY3RvciwgY2FyZFR5cGVTZWxlY3Rvcikge1xyXG4gICAgICAgIHZhciBjbGVhdmUgPSBuZXcgQ2xlYXZlKGNhcmRGaWVsZFNlbGVjdG9yLCB7XHJcbiAgICAgICAgICAgIGNyZWRpdENhcmQ6IHRydWUsXHJcbiAgICAgICAgICAgIG9uQ3JlZGl0Q2FyZFR5cGVDaGFuZ2VkOiBmdW5jdGlvbiAodHlwZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNyZWRpdENhcmRUeXBlcyA9IHtcclxuICAgICAgICAgICAgICAgICAgICB2aXNhOiAnVmlzYScsXHJcbiAgICAgICAgICAgICAgICAgICAgbWFzdGVyY2FyZDogJ01hc3RlciBDYXJkJyxcclxuICAgICAgICAgICAgICAgICAgICBhbWV4OiAnQW1leCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzY292ZXI6ICdEaXNjb3ZlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgdW5rbm93bjogJ1Vua25vd24nXHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjYXJkVHlwZSA9IGNyZWRpdENhcmRUeXBlc1tPYmplY3Qua2V5cyhjcmVkaXRDYXJkVHlwZXMpLmluZGV4T2YodHlwZSkgPiAtMVxyXG4gICAgICAgICAgICAgICAgICAgID8gdHlwZVxyXG4gICAgICAgICAgICAgICAgICAgIDogJ3Vua25vd24nXTtcclxuICAgICAgICAgICAgICAgICQoY2FyZFR5cGVTZWxlY3RvcikudmFsKGNhcmRUeXBlKTtcclxuICAgICAgICAgICAgICAgICQoJy5jYXJkLW51bWJlci13cmFwcGVyJykuYXR0cignZGF0YS10eXBlJywgdHlwZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3Zpc2EnIHx8IHR5cGUgPT09ICdtYXN0ZXJjYXJkJyB8fCB0eXBlID09PSAnZGlzY292ZXInKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NlY3VyaXR5Q29kZScpLmF0dHIoJ21heGxlbmd0aCcsIDMpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc2VjdXJpdHlDb2RlJykuYXR0cignbWF4bGVuZ3RoJywgNCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChjYXJkRmllbGRTZWxlY3RvcikuZGF0YSgnY2xlYXZlJywgY2xlYXZlKTtcclxuICAgIH0sXHJcblxyXG4gICAgc2VyaWFsaXplRGF0YTogZnVuY3Rpb24gKGZvcm0pIHtcclxuICAgICAgICB2YXIgc2VyaWFsaXplZEFycmF5ID0gZm9ybS5zZXJpYWxpemVBcnJheSgpO1xyXG5cclxuICAgICAgICBzZXJpYWxpemVkQXJyYXkuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICBpZiAoaXRlbS5uYW1lLmluZGV4T2YoJ2NhcmROdW1iZXInKSA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnZhbHVlID0gJCgnI2NhcmROdW1iZXInKS5kYXRhKCdjbGVhdmUnKS5nZXRSYXdWYWx1ZSgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuICQucGFyYW0oc2VyaWFsaXplZEFycmF5KTtcclxuICAgIH1cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar NumeralFormatter = function (numeralDecimalMark,\n                                 numeralIntegerScale,\n                                 numeralDecimalScale,\n                                 numeralThousandsGroupStyle,\n                                 numeralPositiveOnly,\n                                 stripLeadingZeroes,\n                                 prefix,\n                                 signBeforePrefix,\n                                 tailPrefix,\n                                 delimiter) {\n    var owner = this;\n\n    owner.numeralDecimalMark = numeralDecimalMark || '.';\n    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n    owner.prefix = (prefix || prefix === '') ? prefix : '';\n    owner.signBeforePrefix = !!signBeforePrefix;\n    owner.tailPrefix = !!tailPrefix;\n    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n};\n\nNumeralFormatter.groupStyle = {\n    thousand: 'thousand',\n    lakh:     'lakh',\n    wan:      'wan',\n    none:     'none'    \n};\n\nNumeralFormatter.prototype = {\n    getRawValue: function (value) {\n        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n    },\n\n    format: function (value) {\n        var owner = this, parts, partSign, partSignAndPrefix, partInteger, partDecimal = '';\n\n        // strip alphabet letters\n        value = value.replace(/[A-Za-z]/g, '')\n            // replace the first decimal mark with reserved placeholder\n            .replace(owner.numeralDecimalMark, 'M')\n\n            // strip non numeric letters except minus and \"M\"\n            // this is to ensure prefix has been stripped\n            .replace(/[^\\dM-]/g, '')\n\n            // replace the leading minus with reserved placeholder\n            .replace(/^\\-/, 'N')\n\n            // strip the other minus sign (if present)\n            .replace(/\\-/g, '')\n\n            // replace the minus sign (if present)\n            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n            // replace decimal mark\n            .replace('M', owner.numeralDecimalMark);\n\n        // strip any leading zeros\n        if (owner.stripLeadingZeroes) {\n            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n        }\n\n        partSign = value.slice(0, 1) === '-' ? '-' : '';\n        if (typeof owner.prefix != 'undefined') {\n            if (owner.signBeforePrefix) {\n                partSignAndPrefix = partSign + owner.prefix;\n            } else {\n                partSignAndPrefix = owner.prefix + partSign;\n            }\n        } else {\n            partSignAndPrefix = partSign;\n        }\n        \n        partInteger = value;\n\n        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n            parts = value.split(owner.numeralDecimalMark);\n            partInteger = parts[0];\n            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n        }\n\n        if(partSign === '-') {\n            partInteger = partInteger.slice(1);\n        }\n\n        if (owner.numeralIntegerScale > 0) {\n          partInteger = partInteger.slice(0, owner.numeralIntegerScale);\n        }\n\n        switch (owner.numeralThousandsGroupStyle) {\n        case NumeralFormatter.groupStyle.lakh:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n            break;\n\n        case NumeralFormatter.groupStyle.wan:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n            break;\n\n        case NumeralFormatter.groupStyle.thousand:\n            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n            break;\n        }\n\n        if (owner.tailPrefix) {\n            return partSign + partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '') + owner.prefix;\n        }\n\n        return partSignAndPrefix + partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n    }\n};\n\nvar NumeralFormatter_1 = NumeralFormatter;\n\nvar DateFormatter = function (datePattern, dateMin, dateMax) {\n    var owner = this;\n\n    owner.date = [];\n    owner.blocks = [];\n    owner.datePattern = datePattern;\n    owner.dateMin = dateMin\n      .split('-')\n      .reverse()\n      .map(function(x) {\n        return parseInt(x, 10);\n      });\n    if (owner.dateMin.length === 2) owner.dateMin.unshift(0);\n\n    owner.dateMax = dateMax\n      .split('-')\n      .reverse()\n      .map(function(x) {\n        return parseInt(x, 10);\n      });\n    if (owner.dateMax.length === 2) owner.dateMax.unshift(0);\n    \n    owner.initBlocks();\n};\n\nDateFormatter.prototype = {\n    initBlocks: function () {\n        var owner = this;\n        owner.datePattern.forEach(function (value) {\n            if (value === 'Y') {\n                owner.blocks.push(4);\n            } else {\n                owner.blocks.push(2);\n            }\n        });\n    },\n\n    getISOFormatDate: function () {\n        var owner = this,\n            date = owner.date;\n\n        return date[2] ? (\n            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n        ) : '';\n    },\n\n    getBlocks: function () {\n        return this.blocks;\n    },\n\n    getValidatedDate: function (value) {\n        var owner = this, result = '';\n\n        value = value.replace(/[^\\d]/g, '');\n\n        owner.blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    sub0 = sub.slice(0, 1),\n                    rest = value.slice(length);\n\n                switch (owner.datePattern[index]) {\n                case 'd':\n                    if (sub === '00') {\n                        sub = '01';\n                    } else if (parseInt(sub0, 10) > 3) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > 31) {\n                        sub = '31';\n                    }\n\n                    break;\n\n                case 'm':\n                    if (sub === '00') {\n                        sub = '01';\n                    } else if (parseInt(sub0, 10) > 1) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > 12) {\n                        sub = '12';\n                    }\n\n                    break;\n                }\n\n                result += sub;\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return this.getFixedDateString(result);\n    },\n\n    getFixedDateString: function (value) {\n        var owner = this, datePattern = owner.datePattern, date = [],\n            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n            day, month, year, fullYearDone = false;\n\n        // mm-dd || dd-mm\n        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n            monthStartIndex = 2 - dayStartIndex;\n            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n            date = this.getFixedDate(day, month, 0);\n        }\n\n        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n        if (value.length === 8) {\n            datePattern.forEach(function (type, index) {\n                switch (type) {\n                case 'd':\n                    dayIndex = index;\n                    break;\n                case 'm':\n                    monthIndex = index;\n                    break;\n                default:\n                    yearIndex = index;\n                    break;\n                }\n            });\n\n            yearStartIndex = yearIndex * 2;\n            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;\n\n            date = this.getFixedDate(day, month, year);\n        }\n\n        // mm-yy || yy-mm\n        if (value.length === 4 && (datePattern[0] === 'y' || datePattern[1] === 'y')) {\n            monthStartIndex = datePattern[0] === 'm' ? 0 : 2;\n            yearStartIndex = 2 - monthStartIndex;\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 2), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 2).length === 2;\n\n            date = [0, month, year];\n        }\n\n        // mm-yyyy || yyyy-mm\n        if (value.length === 6 && (datePattern[0] === 'Y' || datePattern[1] === 'Y')) {\n            monthStartIndex = datePattern[0] === 'm' ? 0 : 4;\n            yearStartIndex = 2 - 0.5 * monthStartIndex;\n            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;\n\n            date = [0, month, year];\n        }\n\n        date = owner.getRangeFixedDate(date);\n        owner.date = date;\n\n        var result = date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n            switch (current) {\n            case 'd':\n                return previous + (date[0] === 0 ? '' : owner.addLeadingZero(date[0]));\n            case 'm':\n                return previous + (date[1] === 0 ? '' : owner.addLeadingZero(date[1]));\n            case 'y':\n                return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2], false) : '');\n            case 'Y':\n                return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2], true) : '');\n            }\n        }, '');\n\n        return result;\n    },\n\n    getRangeFixedDate: function (date) {\n        var owner = this,\n            datePattern = owner.datePattern,\n            dateMin = owner.dateMin || [],\n            dateMax = owner.dateMax || [];\n\n        if (!date.length || (dateMin.length < 3 && dateMax.length < 3)) return date;\n\n        if (\n          datePattern.find(function(x) {\n            return x.toLowerCase() === 'y';\n          }) &&\n          date[2] === 0\n        ) return date;\n\n        if (dateMax.length && (dateMax[2] < date[2] || (\n          dateMax[2] === date[2] && (dateMax[1] < date[1] || (\n            dateMax[1] === date[1] && dateMax[0] < date[0]\n          ))\n        ))) return dateMax;\n\n        if (dateMin.length && (dateMin[2] > date[2] || (\n          dateMin[2] === date[2] && (dateMin[1] > date[1] || (\n            dateMin[1] === date[1] && dateMin[0] > date[0]\n          ))\n        ))) return dateMin;\n\n        return date;\n    },\n\n    getFixedDate: function (day, month, year) {\n        day = Math.min(day, 31);\n        month = Math.min(month, 12);\n        year = parseInt((year || 0), 10);\n\n        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n        }\n\n        return [day, month, year];\n    },\n\n    isLeapYear: function (year) {\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    },\n\n    addLeadingZero: function (number) {\n        return (number < 10 ? '0' : '') + number;\n    },\n\n    addLeadingZeroForYear: function (number, fullYearMode) {\n        if (fullYearMode) {\n            return (number < 10 ? '000' : (number < 100 ? '00' : (number < 1000 ? '0' : ''))) + number;\n        }\n\n        return (number < 10 ? '0' : '') + number;\n    }\n};\n\nvar DateFormatter_1 = DateFormatter;\n\nvar TimeFormatter = function (timePattern, timeFormat) {\n    var owner = this;\n\n    owner.time = [];\n    owner.blocks = [];\n    owner.timePattern = timePattern;\n    owner.timeFormat = timeFormat;\n    owner.initBlocks();\n};\n\nTimeFormatter.prototype = {\n    initBlocks: function () {\n        var owner = this;\n        owner.timePattern.forEach(function () {\n            owner.blocks.push(2);\n        });\n    },\n\n    getISOFormatTime: function () {\n        var owner = this,\n            time = owner.time;\n\n        return time[2] ? (\n            owner.addLeadingZero(time[0]) + ':' + owner.addLeadingZero(time[1]) + ':' + owner.addLeadingZero(time[2])\n        ) : '';\n    },\n\n    getBlocks: function () {\n        return this.blocks;\n    },\n\n    getTimeFormatOptions: function () {\n        var owner = this;\n        if (String(owner.timeFormat) === '12') {\n            return {\n                maxHourFirstDigit: 1,\n                maxHours: 12,\n                maxMinutesFirstDigit: 5,\n                maxMinutes: 60\n            };\n        }\n\n        return {\n            maxHourFirstDigit: 2,\n            maxHours: 23,\n            maxMinutesFirstDigit: 5,\n            maxMinutes: 60\n        };\n    },\n\n    getValidatedTime: function (value) {\n        var owner = this, result = '';\n\n        value = value.replace(/[^\\d]/g, '');\n\n        var timeFormatOptions = owner.getTimeFormatOptions();\n\n        owner.blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    sub0 = sub.slice(0, 1),\n                    rest = value.slice(length);\n\n                switch (owner.timePattern[index]) {\n\n                case 'h':\n                    if (parseInt(sub0, 10) > timeFormatOptions.maxHourFirstDigit) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > timeFormatOptions.maxHours) {\n                        sub = timeFormatOptions.maxHours + '';\n                    }\n\n                    break;\n\n                case 'm':\n                case 's':\n                    if (parseInt(sub0, 10) > timeFormatOptions.maxMinutesFirstDigit) {\n                        sub = '0' + sub0;\n                    } else if (parseInt(sub, 10) > timeFormatOptions.maxMinutes) {\n                        sub = timeFormatOptions.maxMinutes + '';\n                    }\n                    break;\n                }\n\n                result += sub;\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return this.getFixedTimeString(result);\n    },\n\n    getFixedTimeString: function (value) {\n        var owner = this, timePattern = owner.timePattern, time = [],\n            secondIndex = 0, minuteIndex = 0, hourIndex = 0,\n            secondStartIndex = 0, minuteStartIndex = 0, hourStartIndex = 0,\n            second, minute, hour;\n\n        if (value.length === 6) {\n            timePattern.forEach(function (type, index) {\n                switch (type) {\n                case 's':\n                    secondIndex = index * 2;\n                    break;\n                case 'm':\n                    minuteIndex = index * 2;\n                    break;\n                case 'h':\n                    hourIndex = index * 2;\n                    break;\n                }\n            });\n\n            hourStartIndex = hourIndex;\n            minuteStartIndex = minuteIndex;\n            secondStartIndex = secondIndex;\n\n            second = parseInt(value.slice(secondStartIndex, secondStartIndex + 2), 10);\n            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n            time = this.getFixedTime(hour, minute, second);\n        }\n\n        if (value.length === 4 && owner.timePattern.indexOf('s') < 0) {\n            timePattern.forEach(function (type, index) {\n                switch (type) {\n                case 'm':\n                    minuteIndex = index * 2;\n                    break;\n                case 'h':\n                    hourIndex = index * 2;\n                    break;\n                }\n            });\n\n            hourStartIndex = hourIndex;\n            minuteStartIndex = minuteIndex;\n\n            second = 0;\n            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n            time = this.getFixedTime(hour, minute, second);\n        }\n\n        owner.time = time;\n\n        return time.length === 0 ? value : timePattern.reduce(function (previous, current) {\n            switch (current) {\n            case 's':\n                return previous + owner.addLeadingZero(time[2]);\n            case 'm':\n                return previous + owner.addLeadingZero(time[1]);\n            case 'h':\n                return previous + owner.addLeadingZero(time[0]);\n            }\n        }, '');\n    },\n\n    getFixedTime: function (hour, minute, second) {\n        second = Math.min(parseInt(second || 0, 10), 60);\n        minute = Math.min(minute, 60);\n        hour = Math.min(hour, 60);\n\n        return [hour, minute, second];\n    },\n\n    addLeadingZero: function (number) {\n        return (number < 10 ? '0' : '') + number;\n    }\n};\n\nvar TimeFormatter_1 = TimeFormatter;\n\nvar PhoneFormatter = function (formatter, delimiter) {\n    var owner = this;\n\n    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n    owner.formatter = formatter;\n};\n\nPhoneFormatter.prototype = {\n    setFormatter: function (formatter) {\n        this.formatter = formatter;\n    },\n\n    format: function (phoneNumber) {\n        var owner = this;\n\n        owner.formatter.clear();\n\n        // only keep number and +\n        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n        // strip non-leading +\n        phoneNumber = phoneNumber.replace(/^\\+/, 'B').replace(/\\+/g, '').replace('B', '+');\n\n        // strip delimiter\n        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n        var result = '', current, validated = false;\n\n        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n            // has ()- or space inside\n            if (/[\\s()-]/g.test(current)) {\n                result = current;\n\n                validated = true;\n            } else {\n                if (!validated) {\n                    result = current;\n                }\n                // else: over length input\n                // it turns to invalid number again\n            }\n        }\n\n        // strip ()\n        // e.g. US: 7161234567 returns (716) 123-4567\n        result = result.replace(/[()]/g, '');\n        // replace library delimiter with user customized delimiter\n        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n        return result;\n    }\n};\n\nvar PhoneFormatter_1 = PhoneFormatter;\n\nvar CreditCardDetector = {\n    blocks: {\n        uatp:          [4, 5, 6],\n        amex:          [4, 6, 5],\n        diners:        [4, 6, 4],\n        discover:      [4, 4, 4, 4],\n        mastercard:    [4, 4, 4, 4],\n        dankort:       [4, 4, 4, 4],\n        instapayment:  [4, 4, 4, 4],\n        jcb15:         [4, 6, 5],\n        jcb:           [4, 4, 4, 4],\n        maestro:       [4, 4, 4, 4],\n        visa:          [4, 4, 4, 4],\n        mir:           [4, 4, 4, 4],\n        unionPay:      [4, 4, 4, 4],\n        general:       [4, 4, 4, 4]\n    },\n\n    re: {\n        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n        uatp: /^(?!1800)1\\d{0,14}/,\n\n        // starts with 34/37; 15 digits\n        amex: /^3[47]\\d{0,13}/,\n\n        // starts with 6011/65/644-649; 16 digits\n        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n        // starts with 300-305/309 or 36/38/39; 14 digits\n        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n        // starts with 51-55/2221–2720; 16 digits\n        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n        // starts with 5019/4175/4571; 16 digits\n        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n        // starts with 637-639; 16 digits\n        instapayment: /^63[7-9]\\d{0,13}/,\n\n        // starts with 2131/1800; 15 digits\n        jcb15: /^(?:2131|1800)\\d{0,11}/,\n\n        // starts with 2131/1800/35; 16 digits\n        jcb: /^(?:35\\d{0,2})\\d{0,12}/,\n\n        // starts with 50/56-58/6304/67; 16 digits\n        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\n        // starts with 22; 16 digits\n        mir: /^220[0-4]\\d{0,12}/,\n\n        // starts with 4; 16 digits\n        visa: /^4\\d{0,15}/,\n\n        // starts with 62/81; 16 digits\n        unionPay: /^(62|81)\\d{0,14}/\n    },\n\n    getStrictBlocks: function (block) {\n      var total = block.reduce(function (prev, current) {\n        return prev + current;\n      }, 0);\n\n      return block.concat(19 - total);\n    },\n\n    getInfo: function (value, strictMode) {\n        var blocks = CreditCardDetector.blocks,\n            re = CreditCardDetector.re;\n\n        // Some credit card can have up to 19 digits number.\n        // Set strictMode to true will remove the 16 max-length restrain,\n        // however, I never found any website validate card number like\n        // this, hence probably you don't want to enable this option.\n        strictMode = !!strictMode;\n\n        for (var key in re) {\n            if (re[key].test(value)) {\n                var matchedBlocks = blocks[key];\n                return {\n                    type: key,\n                    blocks: strictMode ? this.getStrictBlocks(matchedBlocks) : matchedBlocks\n                };\n            }\n        }\n\n        return {\n            type: 'unknown',\n            blocks: strictMode ? this.getStrictBlocks(blocks.general) : blocks.general\n        };\n    }\n};\n\nvar CreditCardDetector_1 = CreditCardDetector;\n\nvar Util = {\n    noop: function () {\n    },\n\n    strip: function (value, re) {\n        return value.replace(re, '');\n    },\n\n    getPostDelimiter: function (value, delimiter, delimiters) {\n        // single delimiter\n        if (delimiters.length === 0) {\n            return value.slice(-delimiter.length) === delimiter ? delimiter : '';\n        }\n\n        // multiple delimiters\n        var matchedDelimiter = '';\n        delimiters.forEach(function (current) {\n            if (value.slice(-current.length) === current) {\n                matchedDelimiter = current;\n            }\n        });\n\n        return matchedDelimiter;\n    },\n\n    getDelimiterREByDelimiter: function (delimiter) {\n        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n    },\n\n    getNextCursorPosition: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n      // If cursor was at the end of value, just place it back.\n      // Because new value could contain additional chars.\n      if (oldValue.length === prevPos) {\n          return newValue.length;\n      }\n\n      return prevPos + this.getPositionOffset(prevPos, oldValue, newValue, delimiter ,delimiters);\n    },\n\n    getPositionOffset: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n        var oldRawValue, newRawValue, lengthOffset;\n\n        oldRawValue = this.stripDelimiters(oldValue.slice(0, prevPos), delimiter, delimiters);\n        newRawValue = this.stripDelimiters(newValue.slice(0, prevPos), delimiter, delimiters);\n        lengthOffset = oldRawValue.length - newRawValue.length;\n\n        return (lengthOffset !== 0) ? (lengthOffset / Math.abs(lengthOffset)) : 0;\n    },\n\n    stripDelimiters: function (value, delimiter, delimiters) {\n        var owner = this;\n\n        // single delimiter\n        if (delimiters.length === 0) {\n            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n            return value.replace(delimiterRE, '');\n        }\n\n        // multiple delimiters\n        delimiters.forEach(function (current) {\n            current.split('').forEach(function (letter) {\n                value = value.replace(owner.getDelimiterREByDelimiter(letter), '');\n            });\n        });\n\n        return value;\n    },\n\n    headStr: function (str, length) {\n        return str.slice(0, length);\n    },\n\n    getMaxLength: function (blocks) {\n        return blocks.reduce(function (previous, current) {\n            return previous + current;\n        }, 0);\n    },\n\n    // strip prefix\n    // Before type  |   After type    |     Return value\n    // PEFIX-...    |   PEFIX-...     |     ''\n    // PREFIX-123   |   PEFIX-123     |     123\n    // PREFIX-123   |   PREFIX-23     |     23\n    // PREFIX-123   |   PREFIX-1234   |     1234\n    getPrefixStrippedValue: function (value, prefix, prefixLength, prevResult, delimiter, delimiters, noImmediatePrefix, tailPrefix, signBeforePrefix) {\n        // No prefix\n        if (prefixLength === 0) {\n          return value;\n        }\n\n        // Value is prefix\n        if (value === prefix && value !== '') {\n          return '';\n        }\n\n        if (signBeforePrefix && (value.slice(0, 1) == '-')) {\n            var prev = (prevResult.slice(0, 1) == '-') ? prevResult.slice(1) : prevResult;\n            return '-' + this.getPrefixStrippedValue(value.slice(1), prefix, prefixLength, prev, delimiter, delimiters, noImmediatePrefix, tailPrefix, signBeforePrefix);\n        }\n\n        // Pre result prefix string does not match pre-defined prefix\n        if (prevResult.slice(0, prefixLength) !== prefix && !tailPrefix) {\n            // Check if the first time user entered something\n            if (noImmediatePrefix && !prevResult && value) return value;\n            return '';\n        } else if (prevResult.slice(-prefixLength) !== prefix && tailPrefix) {\n            // Check if the first time user entered something\n            if (noImmediatePrefix && !prevResult && value) return value;\n            return '';\n        }\n\n        var prevValue = this.stripDelimiters(prevResult, delimiter, delimiters);\n\n        // New value has issue, someone typed in between prefix letters\n        // Revert to pre value\n        if (value.slice(0, prefixLength) !== prefix && !tailPrefix) {\n            return prevValue.slice(prefixLength);\n        } else if (value.slice(-prefixLength) !== prefix && tailPrefix) {\n            return prevValue.slice(0, -prefixLength - 1);\n        }\n\n        // No issue, strip prefix for new value\n        return tailPrefix ? value.slice(0, -prefixLength) : value.slice(prefixLength);\n    },\n\n    getFirstDiffIndex: function (prev, current) {\n        var index = 0;\n\n        while (prev.charAt(index) === current.charAt(index)) {\n            if (prev.charAt(index++) === '') {\n                return -1;\n            }\n        }\n\n        return index;\n    },\n\n    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n        var result = '',\n            multipleDelimiters = delimiters.length > 0,\n            currentDelimiter = '';\n\n        // no options, normal input\n        if (blocksLength === 0) {\n            return value;\n        }\n\n        blocks.forEach(function (length, index) {\n            if (value.length > 0) {\n                var sub = value.slice(0, length),\n                    rest = value.slice(length);\n\n                if (multipleDelimiters) {\n                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n                } else {\n                    currentDelimiter = delimiter;\n                }\n\n                if (delimiterLazyShow) {\n                    if (index > 0) {\n                        result += currentDelimiter;\n                    }\n\n                    result += sub;\n                } else {\n                    result += sub;\n\n                    if (sub.length === length && index < blocksLength - 1) {\n                        result += currentDelimiter;\n                    }\n                }\n\n                // update remaining string\n                value = rest;\n            }\n        });\n\n        return result;\n    },\n\n    // move cursor to the end\n    // the first time user focuses on an input with prefix\n    fixPrefixCursor: function (el, prefix, delimiter, delimiters) {\n        if (!el) {\n            return;\n        }\n\n        var val = el.value,\n            appendix = delimiter || (delimiters[0] || ' ');\n\n        if (!el.setSelectionRange || !prefix || (prefix.length + appendix.length) <= val.length) {\n            return;\n        }\n\n        var len = val.length * 2;\n\n        // set timeout to avoid blink\n        setTimeout(function () {\n            el.setSelectionRange(len, len);\n        }, 1);\n    },\n\n    // Check if input field is fully selected\n    checkFullSelection: function(value) {\n      try {\n        var selection = window.getSelection() || document.getSelection() || {};\n        return selection.toString().length === value.length;\n      } catch (ex) {\n        // Ignore\n      }\n\n      return false;\n    },\n\n    setSelection: function (element, position, doc) {\n        if (element !== this.getActiveElement(doc)) {\n            return;\n        }\n\n        // cursor is already in the end\n        if (element && element.value.length <= position) {\n          return;\n        }\n\n        if (element.createTextRange) {\n            var range = element.createTextRange();\n\n            range.move('character', position);\n            range.select();\n        } else {\n            try {\n                element.setSelectionRange(position, position);\n            } catch (e) {\n                // eslint-disable-next-line\n                console.warn('The input element type does not support selection');\n            }\n        }\n    },\n\n    getActiveElement: function(parent) {\n        var activeElement = parent.activeElement;\n        if (activeElement && activeElement.shadowRoot) {\n            return this.getActiveElement(activeElement.shadowRoot);\n        }\n        return activeElement;\n    },\n\n    isAndroid: function () {\n        return navigator && /android/i.test(navigator.userAgent);\n    },\n\n    // On Android chrome, the keyup and keydown events\n    // always return key code 229 as a composition that\n    // buffers the user’s keystrokes\n    // see https://github.com/nosir/cleave.js/issues/147\n    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n            return false;\n        }\n\n        return currentInputValue === lastInputValue.slice(0, -1);\n    }\n};\n\nvar Util_1 = Util;\n\n/**\n * Props Assignment\n *\n * Separate this, so react module can share the usage\n */\nvar DefaultProperties = {\n    // Maybe change to object-assign\n    // for now just keep it as simple\n    assign: function (target, opts) {\n        target = target || {};\n        opts = opts || {};\n\n        // credit card\n        target.creditCard = !!opts.creditCard;\n        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n        target.creditCardType = '';\n        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n        // phone\n        target.phone = !!opts.phone;\n        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n        target.phoneFormatter = {};\n\n        // time\n        target.time = !!opts.time;\n        target.timePattern = opts.timePattern || ['h', 'm', 's'];\n        target.timeFormat = opts.timeFormat || '24';\n        target.timeFormatter = {};\n\n        // date\n        target.date = !!opts.date;\n        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n        target.dateMin = opts.dateMin || '';\n        target.dateMax = opts.dateMax || '';\n        target.dateFormatter = {};\n\n        // numeral\n        target.numeral = !!opts.numeral;\n        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n        target.signBeforePrefix = !!opts.signBeforePrefix;\n        target.tailPrefix = !!opts.tailPrefix;\n\n        // others\n        target.swapHiddenInput = !!opts.swapHiddenInput;\n        \n        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n        target.uppercase = !!opts.uppercase;\n        target.lowercase = !!opts.lowercase;\n\n        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n        target.prefixLength = target.prefix.length;\n        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n        target.copyDelimiter = !!opts.copyDelimiter;\n\n        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n        target.delimiter =\n            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n                (opts.date ? '/' :\n                    (opts.time ? ':' :\n                        (opts.numeral ? ',' :\n                            (opts.phone ? ' ' :\n                                ' '))));\n        target.delimiterLength = target.delimiter.length;\n        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n        target.delimiters = opts.delimiters || [];\n\n        target.blocks = opts.blocks || [];\n        target.blocksLength = target.blocks.length;\n\n        target.root = (typeof commonjsGlobal === 'object' && commonjsGlobal) ? commonjsGlobal : window;\n        target.document = opts.document || target.root.document;\n\n        target.maxLength = 0;\n\n        target.backspace = false;\n        target.result = '';\n\n        target.onValueChanged = opts.onValueChanged || (function () {});\n\n        return target;\n    }\n};\n\nvar DefaultProperties_1 = DefaultProperties;\n\n/**\n * Construct a new Cleave instance by passing the configuration object\n *\n * @param {String | HTMLElement} element\n * @param {Object} opts\n */\nvar Cleave = function (element, opts) {\n    var owner = this;\n    var hasMultipleElements = false;\n\n    if (typeof element === 'string') {\n        owner.element = document.querySelector(element);\n        hasMultipleElements = document.querySelectorAll(element).length > 1;\n    } else {\n      if (typeof element.length !== 'undefined' && element.length > 0) {\n        owner.element = element[0];\n        hasMultipleElements = element.length > 1;\n      } else {\n        owner.element = element;\n      }\n    }\n\n    if (!owner.element) {\n        throw new Error('[cleave.js] Please check the element');\n    }\n\n    if (hasMultipleElements) {\n      try {\n        // eslint-disable-next-line\n        console.warn('[cleave.js] Multiple input fields matched, cleave.js will only take the first one.');\n      } catch (e) {\n        // Old IE\n      }\n    }\n\n    opts.initValue = owner.element.value;\n\n    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n    owner.init();\n};\n\nCleave.prototype = {\n    init: function () {\n        var owner = this, pps = owner.properties;\n\n        // no need to use this lib\n        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.time && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n            owner.onInput(pps.initValue);\n\n            return;\n        }\n\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n        owner.isAndroid = Cleave.Util.isAndroid();\n        owner.lastInputValue = '';\n        owner.isBackward = '';\n\n        owner.onChangeListener = owner.onChange.bind(owner);\n        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n        owner.onFocusListener = owner.onFocus.bind(owner);\n        owner.onCutListener = owner.onCut.bind(owner);\n        owner.onCopyListener = owner.onCopy.bind(owner);\n\n        owner.initSwapHiddenInput();\n\n        owner.element.addEventListener('input', owner.onChangeListener);\n        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n        owner.element.addEventListener('focus', owner.onFocusListener);\n        owner.element.addEventListener('cut', owner.onCutListener);\n        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n        owner.initPhoneFormatter();\n        owner.initDateFormatter();\n        owner.initTimeFormatter();\n        owner.initNumeralFormatter();\n\n        // avoid touch input field if value is null\n        // otherwise Firefox will add red box-shadow for <input required />\n        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n            owner.onInput(pps.initValue);\n        }\n    },\n\n    initSwapHiddenInput: function () {\n        var owner = this, pps = owner.properties;\n        if (!pps.swapHiddenInput) return;\n\n        var inputFormatter = owner.element.cloneNode(true);\n        owner.element.parentNode.insertBefore(inputFormatter, owner.element);\n\n        owner.elementSwapHidden = owner.element;\n        owner.elementSwapHidden.type = 'hidden';\n\n        owner.element = inputFormatter;\n        owner.element.id = '';\n    },\n\n    initNumeralFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.numeral) {\n            return;\n        }\n\n        pps.numeralFormatter = new Cleave.NumeralFormatter(\n            pps.numeralDecimalMark,\n            pps.numeralIntegerScale,\n            pps.numeralDecimalScale,\n            pps.numeralThousandsGroupStyle,\n            pps.numeralPositiveOnly,\n            pps.stripLeadingZeroes,\n            pps.prefix,\n            pps.signBeforePrefix,\n            pps.tailPrefix,\n            pps.delimiter\n        );\n    },\n\n    initTimeFormatter: function() {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.time) {\n            return;\n        }\n\n        pps.timeFormatter = new Cleave.TimeFormatter(pps.timePattern, pps.timeFormat);\n        pps.blocks = pps.timeFormatter.getBlocks();\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n    },\n\n    initDateFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.date) {\n            return;\n        }\n\n        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern, pps.dateMin, pps.dateMax);\n        pps.blocks = pps.dateFormatter.getBlocks();\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n    },\n\n    initPhoneFormatter: function () {\n        var owner = this, pps = owner.properties;\n\n        if (!pps.phone) {\n            return;\n        }\n\n        // Cleave.AsYouTypeFormatter should be provided by\n        // external google closure lib\n        try {\n            pps.phoneFormatter = new Cleave.PhoneFormatter(\n                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n                pps.delimiter\n            );\n        } catch (ex) {\n            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n        }\n    },\n\n    onKeyDown: function (event) {\n        var owner = this,\n            charCode = event.which || event.keyCode;\n\n        owner.lastInputValue = owner.element.value;\n        owner.isBackward = charCode === 8;\n    },\n\n    onChange: function (event) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util;\n\n        owner.isBackward = owner.isBackward || event.inputType === 'deleteContentBackward';\n\n        var postDelimiter = Util.getPostDelimiter(owner.lastInputValue, pps.delimiter, pps.delimiters);\n\n        if (owner.isBackward && postDelimiter) {\n            pps.postDelimiterBackspace = postDelimiter;\n        } else {\n            pps.postDelimiterBackspace = false;\n        }\n\n        this.onInput(this.element.value);\n    },\n\n    onFocus: function () {\n        var owner = this,\n            pps = owner.properties;\n        owner.lastInputValue = owner.element.value;\n\n        if (pps.prefix && pps.noImmediatePrefix && !owner.element.value) {\n            this.onInput(pps.prefix);\n        }\n\n        Cleave.Util.fixPrefixCursor(owner.element, pps.prefix, pps.delimiter, pps.delimiters);\n    },\n\n    onCut: function (e) {\n        if (!Cleave.Util.checkFullSelection(this.element.value)) return;\n        this.copyClipboardData(e);\n        this.onInput('');\n    },\n\n    onCopy: function (e) {\n        if (!Cleave.Util.checkFullSelection(this.element.value)) return;\n        this.copyClipboardData(e);\n    },\n\n    copyClipboardData: function (e) {\n        var owner = this,\n            pps = owner.properties,\n            Util = Cleave.Util,\n            inputValue = owner.element.value,\n            textToCopy = '';\n\n        if (!pps.copyDelimiter) {\n            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n        } else {\n            textToCopy = inputValue;\n        }\n\n        try {\n            if (e.clipboardData) {\n                e.clipboardData.setData('Text', textToCopy);\n            } else {\n                window.clipboardData.setData('Text', textToCopy);\n            }\n\n            e.preventDefault();\n        } catch (ex) {\n            //  empty\n        }\n    },\n\n    onInput: function (value) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util;\n\n        // case 1: delete one more character \"4\"\n        // 1234*| -> hit backspace -> 123|\n        // case 2: last character is not delimiter which is:\n        // 12|34* -> hit backspace -> 1|34*\n        // note: no need to apply this for numeral mode\n        var postDelimiterAfter = Util.getPostDelimiter(value, pps.delimiter, pps.delimiters);\n        if (!pps.numeral && pps.postDelimiterBackspace && !postDelimiterAfter) {\n            value = Util.headStr(value, value.length - pps.postDelimiterBackspace.length);\n        }\n\n        // phone formatter\n        if (pps.phone) {\n            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n            } else {\n                pps.result = pps.phoneFormatter.format(value);\n            }\n            owner.updateValueState();\n\n            return;\n        }\n\n        // numeral formatter\n        if (pps.numeral) {\n            // Do not show prefix when noImmediatePrefix is specified\n            // This mostly because we need to show user the native input placeholder\n            if (pps.prefix && pps.noImmediatePrefix && value.length === 0) {\n                pps.result = '';\n            } else {\n                pps.result = pps.numeralFormatter.format(value);\n            }\n            owner.updateValueState();\n\n            return;\n        }\n\n        // date\n        if (pps.date) {\n            value = pps.dateFormatter.getValidatedDate(value);\n        }\n\n        // time\n        if (pps.time) {\n            value = pps.timeFormatter.getValidatedTime(value);\n        }\n\n        // strip delimiters\n        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n        // strip prefix\n        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters, pps.noImmediatePrefix, pps.tailPrefix, pps.signBeforePrefix);\n\n        // strip non-numeric characters\n        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n        // convert case\n        value = pps.uppercase ? value.toUpperCase() : value;\n        value = pps.lowercase ? value.toLowerCase() : value;\n\n        // prevent from showing prefix when no immediate option enabled with empty input value\n        if (pps.prefix) {\n            if (pps.tailPrefix) {\n                value = value + pps.prefix;\n            } else {\n                value = pps.prefix + value;\n            }\n\n\n            // no blocks specified, no need to do formatting\n            if (pps.blocksLength === 0) {\n                pps.result = value;\n                owner.updateValueState();\n\n                return;\n            }\n        }\n\n        // update credit card props\n        if (pps.creditCard) {\n            owner.updateCreditCardPropsByValue(value);\n        }\n\n        // strip over length characters\n        value = Util.headStr(value, pps.maxLength);\n\n        // apply blocks\n        pps.result = Util.getFormattedValue(\n            value,\n            pps.blocks, pps.blocksLength,\n            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n        );\n\n        owner.updateValueState();\n    },\n\n    updateCreditCardPropsByValue: function (value) {\n        var owner = this, pps = owner.properties,\n            Util = Cleave.Util,\n            creditCardInfo;\n\n        // At least one of the first 4 characters has changed\n        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n            return;\n        }\n\n        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n        pps.blocks = creditCardInfo.blocks;\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n        // credit card type changed\n        if (pps.creditCardType !== creditCardInfo.type) {\n            pps.creditCardType = creditCardInfo.type;\n\n            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n        }\n    },\n\n    updateValueState: function () {\n        var owner = this,\n            Util = Cleave.Util,\n            pps = owner.properties;\n\n        if (!owner.element) {\n            return;\n        }\n\n        var endPos = owner.element.selectionEnd;\n        var oldValue = owner.element.value;\n        var newValue = pps.result;\n\n        endPos = Util.getNextCursorPosition(endPos, oldValue, newValue, pps.delimiter, pps.delimiters);\n\n        // fix Android browser type=\"text\" input field\n        // cursor not jumping issue\n        if (owner.isAndroid) {\n            window.setTimeout(function () {\n                owner.element.value = newValue;\n                Util.setSelection(owner.element, endPos, pps.document, false);\n                owner.callOnValueChanged();\n            }, 1);\n\n            return;\n        }\n\n        owner.element.value = newValue;\n        if (pps.swapHiddenInput) owner.elementSwapHidden.value = owner.getRawValue();\n\n        Util.setSelection(owner.element, endPos, pps.document, false);\n        owner.callOnValueChanged();\n    },\n\n    callOnValueChanged: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        pps.onValueChanged.call(owner, {\n            target: {\n                name: owner.element.name,\n                value: pps.result,\n                rawValue: owner.getRawValue()\n            }\n        });\n    },\n\n    setPhoneRegionCode: function (phoneRegionCode) {\n        var owner = this, pps = owner.properties;\n\n        pps.phoneRegionCode = phoneRegionCode;\n        owner.initPhoneFormatter();\n        owner.onChange();\n    },\n\n    setRawValue: function (value) {\n        var owner = this, pps = owner.properties;\n\n        value = value !== undefined && value !== null ? value.toString() : '';\n\n        if (pps.numeral) {\n            value = value.replace('.', pps.numeralDecimalMark);\n        }\n\n        pps.postDelimiterBackspace = false;\n\n        owner.element.value = value;\n        owner.onInput(value);\n    },\n\n    getRawValue: function () {\n        var owner = this,\n            pps = owner.properties,\n            Util = Cleave.Util,\n            rawValue = owner.element.value;\n\n        if (pps.rawValueTrimPrefix) {\n            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters, pps.noImmediatePrefix, pps.tailPrefix, pps.signBeforePrefix);\n        }\n\n        if (pps.numeral) {\n            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n        } else {\n            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n        }\n\n        return rawValue;\n    },\n\n    getISOFormatDate: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n    },\n\n    getISOFormatTime: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        return pps.time ? pps.timeFormatter.getISOFormatTime() : '';\n    },\n\n    getFormattedValue: function () {\n        return this.element.value;\n    },\n\n    destroy: function () {\n        var owner = this;\n\n        owner.element.removeEventListener('input', owner.onChangeListener);\n        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n        owner.element.removeEventListener('focus', owner.onFocusListener);\n        owner.element.removeEventListener('cut', owner.onCutListener);\n        owner.element.removeEventListener('copy', owner.onCopyListener);\n    },\n\n    toString: function () {\n        return '[Cleave Object]';\n    }\n};\n\nCleave.NumeralFormatter = NumeralFormatter_1;\nCleave.DateFormatter = DateFormatter_1;\nCleave.TimeFormatter = TimeFormatter_1;\nCleave.PhoneFormatter = PhoneFormatter_1;\nCleave.CreditCardDetector = CreditCardDetector_1;\nCleave.Util = Util_1;\nCleave.DefaultProperties = DefaultProperties_1;\n\n// for angular directive\n((typeof commonjsGlobal === 'object' && commonjsGlobal) ? commonjsGlobal : window)['Cleave'] = Cleave;\n\n// CommonJS\nvar Cleave_1 = Cleave;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cleave_1);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(16)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n")},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\n\r\n/**\r\n * updates the totals summary\r\n * @param {Array} totals - the totals data\r\n */\r\nfunction updateTotals(totals) {\r\n    $('.shipping-total-cost').text(totals.totalShippingCost);\r\n    $('.tax-total').text(totals.totalTax);\r\n    $('.sub-total').text(totals.subTotal);\r\n    $('.grand-total-sum').text(totals.grandTotal);\r\n\r\n    if (totals.orderLevelDiscountTotal.value > 0) {\r\n        $('.order-discount').removeClass('hide-order-discount');\r\n        $('.order-discount-total').text('- ' + totals.orderLevelDiscountTotal.formatted);\r\n    } else {\r\n        $('.order-discount').addClass('hide-order-discount');\r\n    }\r\n\r\n    if (totals.shippingLevelDiscountTotal.value > 0) {\r\n        $('.shipping-discount').removeClass('hide-shipping-discount');\r\n        $('.shipping-discount-total').text('- ' +\r\n            totals.shippingLevelDiscountTotal.formatted);\r\n    } else {\r\n        $('.shipping-discount').addClass('hide-shipping-discount');\r\n    }\r\n}\r\n\r\n/**\r\n * updates the order product shipping summary for an order model\r\n * @param {Object} order - the order model\r\n */\r\nfunction updateOrderProductSummaryInformation(order) {\r\n    var $productSummary = $('<div />');\r\n    order.shipping.forEach(function (shipping) {\r\n        shipping.productLineItems.items.forEach(function (lineItem) {\r\n            var pli = $('[data-product-line-item=' + lineItem.UUID + ']');\r\n            $productSummary.append(pli);\r\n        });\r\n\r\n        var address = shipping.shippingAddress || {};\r\n        var selectedMethod = shipping.selectedShippingMethod;\r\n\r\n        var nameLine = address.firstName ? address.firstName + ' ' : '';\r\n        if (address.lastName) nameLine += address.lastName;\r\n\r\n        var address1Line = address.address1;\r\n        var address2Line = address.address2;\r\n\r\n        var phoneLine = address.phone;\r\n\r\n        var shippingCost = selectedMethod ? selectedMethod.shippingCost : '';\r\n        var methodNameLine = selectedMethod ? selectedMethod.displayName : '';\r\n        var methodArrivalTime = selectedMethod && selectedMethod.estimatedArrivalTime\r\n            ? '( ' + selectedMethod.estimatedArrivalTime + ' )'\r\n            : '';\r\n\r\n        var tmpl = $('#pli-shipping-summary-template').clone();\r\n\r\n        if (shipping.productLineItems.items && shipping.productLineItems.items.length > 1) {\r\n            $('h5 > span').text(' - ' + shipping.productLineItems.items.length + ' '\r\n                + order.resources.items);\r\n        } else {\r\n            $('h5 > span').text('');\r\n        }\r\n\r\n        var stateRequiredAttr = $('#shippingState').attr('required');\r\n        var isRequired = stateRequiredAttr !== undefined && stateRequiredAttr !== false;\r\n        var stateExists = (shipping.shippingAddress && shipping.shippingAddress.stateCode)\r\n            ? shipping.shippingAddress.stateCode\r\n            : false;\r\n        var stateBoolean = false;\r\n        if ((isRequired && stateExists) || (!isRequired)) {\r\n            stateBoolean = true;\r\n        }\r\n\r\n        var shippingForm = $('.multi-shipping input[name=\"shipmentUUID\"][value=\"' + shipping.UUID + '\"]').parent();\r\n\r\n        if (shipping.shippingAddress\r\n            && shipping.shippingAddress.firstName\r\n            && shipping.shippingAddress.address1\r\n            && shipping.shippingAddress.city\r\n            && stateBoolean\r\n            && shipping.shippingAddress.countryCode\r\n            && (shipping.shippingAddress.phone || shipping.productLineItems.items[0].fromStoreId)) {\r\n            $('.ship-to-name', tmpl).text(nameLine);\r\n            $('.ship-to-address1', tmpl).text(address1Line);\r\n            $('.ship-to-address2', tmpl).text(address2Line);\r\n            $('.ship-to-city', tmpl).text(address.city);\r\n            if (address.stateCode) {\r\n                $('.ship-to-st', tmpl).text(address.stateCode);\r\n            }\r\n            $('.ship-to-zip', tmpl).text(address.postalCode);\r\n            $('.ship-to-phone', tmpl).text(phoneLine);\r\n\r\n            if (!address2Line) {\r\n                $('.ship-to-address2', tmpl).hide();\r\n            }\r\n\r\n            if (!phoneLine) {\r\n                $('.ship-to-phone', tmpl).hide();\r\n            }\r\n\r\n            shippingForm.find('.ship-to-message').text('');\r\n        } else {\r\n            shippingForm.find('.ship-to-message').text(order.resources.addressIncomplete);\r\n        }\r\n\r\n        if (shipping.isGift) {\r\n            $('.gift-message-summary', tmpl).text(shipping.giftMessage);\r\n        } else {\r\n            $('.gift-summary', tmpl).addClass('d-none');\r\n        }\r\n\r\n        // checking h5 title shipping to or pickup\r\n        var $shippingAddressLabel = $('.shipping-header-text', tmpl);\r\n        $('body').trigger('shipping:updateAddressLabelText',\r\n            { selectedShippingMethod: selectedMethod, resources: order.resources, shippingAddressLabel: $shippingAddressLabel });\r\n\r\n        if (shipping.selectedShippingMethod) {\r\n            $('.display-name', tmpl).text(methodNameLine);\r\n            $('.arrival-time', tmpl).text(methodArrivalTime);\r\n            $('.price', tmpl).text(shippingCost);\r\n        }\r\n\r\n        var $shippingSummary = $('<div class=\"multi-shipping\" data-shipment-summary=\"'\r\n            + shipping.UUID + '\" />');\r\n        $shippingSummary.html(tmpl.html());\r\n        $productSummary.append($shippingSummary);\r\n    });\r\n\r\n    $('.product-summary-block').html($productSummary.html());\r\n\r\n    // Also update the line item prices, as they might have been altered\r\n    $('.grand-total-price').text(order.totals.subTotal);\r\n    order.items.items.forEach(function (item) {\r\n        if (item.priceTotal && item.priceTotal.renderedPrice) {\r\n            $('.item-total-' + item.UUID).empty().append(item.priceTotal.renderedPrice);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    updateTotals: updateTotals,\r\n    updateOrderProductSummaryInformation: updateOrderProductSummaryInformation\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n")}]);